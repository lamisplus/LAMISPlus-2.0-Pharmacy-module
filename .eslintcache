[{"C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\index.js":"1","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\App.js":"2","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\Index.js":"6","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\context\\ThemeDemo.js":"7","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PrescriptionList.js":"8","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PatientPrescriptions.js":"9","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"10","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\DispenseDrug.js":"11","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\api.js":"12","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PrescriptionObj.js":"13","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\ViewModalForm.js":"14"},{"size":754,"mtime":1657579836087,"results":"15","hashOfConfig":"16"},{"size":1067,"mtime":1657579836086,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1657579584988,"results":"18","hashOfConfig":"16"},{"size":9235,"mtime":1657579582539,"results":"19","hashOfConfig":"16"},{"size":1458,"mtime":1657579836141,"results":"20","hashOfConfig":"16"},{"size":1742,"mtime":1657601862055,"results":"21","hashOfConfig":"16"},{"size":3056,"mtime":1657579582540,"results":"22","hashOfConfig":"16"},{"size":6284,"mtime":1659885029590,"results":"23","hashOfConfig":"16"},{"size":8256,"mtime":1659882273369,"results":"24","hashOfConfig":"16"},{"size":7200,"mtime":1659883611323,"results":"25","hashOfConfig":"16"},{"size":13293,"mtime":1659939292690,"results":"26","hashOfConfig":"16"},{"size":415,"mtime":1659939587865,"results":"27","hashOfConfig":"16"},{"size":91504,"mtime":1657579584983,"results":"28","hashOfConfig":"16"},{"size":9492,"mtime":1659939701553,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"rtgszi",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\index.js",["66"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\";  \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["67","68"],"C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\App.js",["69"],"import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport Prescription from './main/webapp/jsx/components/Prescriptions/Index'\r\n//import PatientMediationHistory from './main/webapp/jsx/components/Medication/PatientMediationHistory'\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n          <Route path=\"/prescriptions\">\r\n            <Prescription />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Home.js",["70"],"import React, {useState, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PrescriptionList from './Prescriptions/PrescriptionList'\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n     \r\n      <Row>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Pharmacy</h4></li>\r\n\t\t\t</ol>\r\n\t\t</div>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            \r\n            <Card.Body style={{marginTop:\"-20px\"}}>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                    >\r\n                   \r\n                    <Tab eventKey=\"home\" title=\"Prescriptions\">                   \r\n                      <PrescriptionList />\r\n                    </Tab>\r\n                    \r\n                    </Tabs>\r\n\r\n\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\Index.js",["71","72"],"import React,{useState} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './../Patient/PatientCard';\r\nimport PatientPrescriptions from './PatientPrescriptions';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [key, setKey] = useState('home');\r\n    const { classes } = props;\r\n\r\n    const patientObj = history.location && history.location.state ? history.location.state : {}\r\n    console.log(patientObj)\r\n  return (\r\n    <div className={classes.root}>\r\n        \r\n        <Card >\r\n        <CardContent>\r\n        <PatientCardDetail patientObj={patientObj}/>\r\n        <br/>\r\n           \r\n        <PatientPrescriptions  patientObj={patientObj}/> \r\n\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PrescriptionList.js",["73","74","75","76","77"],"import React, {useEffect, useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n import axios from \"axios\";\r\nimport { url as baseUrl, token as token  } from \"../../../api\";\r\nimport {PrescriptionObj} from './PrescriptionObj';\r\n\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst PatientSearch = (props) => {\r\n  const prescriptions = PrescriptionObj;\r\n  const [prescriptionList, setPrescriptionList] = useState([])\r\n    useEffect(() => {\r\n        Prescribtions();\r\n    }, []);\r\n    \r\n    ///GET LIST OF Drug Prescriptions\r\n    async function Prescribtions() {\r\n        axios\r\n            .get(`${baseUrl}drug-orders/patients`,{ headers: {\"Authorization\" : `Bearer ${token}`} })\r\n            .then((response) => {\r\n                console.log(\"pres\", response)\r\n                setPrescriptionList(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    //Get total drug dispensed \r\n    const totalDrugsPrescribed = (drugsArray) => {\r\n      const dispensed = []\r\n        drugsArray.map(drugs => {\r\n            if (drugs.status === 1)\r\n              dispensed.push(drugs)\r\n        })\r\n    return dispensed.length\r\n  }\r\n  const drugType = (drugsArray) => {\r\n    //console.log(prescriptions)\r\n    const type = []\r\n    drugsArray.map(drugs => {\r\n        if (drugs.data.type === 1){\r\n          type.push('Drug')\r\n        }else if(drugs.data.type === 0){\r\n          type.push('Regimen')\r\n        }else{\r\n          type.push('')\r\n        }\r\n       \r\n    })\r\n    \r\n    return type\r\n  }\r\n \r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n       icons={tableIcons}\r\n        title=\"Drug Prescriptions\"\r\n        columns={[\r\n          { title: \"Patient ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Prescription Date\", field: \"date\", type: \"date\", filtering: false, },\r\n          {\r\n            title: \"Total Prescribed\",\r\n            field: \"prescribedCount\",\r\n            filtering: false,\r\n          },\r\n          {\r\n            title: \"Total Dispensed\",\r\n            field: \"dispensedCount\",\r\n            filtering: false,\r\n          },\r\n          {\r\n            title: \"Action\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n          },\r\n        ]}\r\n        data={ prescriptionList.map((prescription) => ({\r\n          Id: prescription.patientHospitalNumber,\r\n          name: prescription.patientFirstName + \" \" + prescription.patientLastName,\r\n          date: prescription.drugOrders[0].dateTimePrescribed.replace(\"@\",\" \"),\r\n          prescribedCount: prescription.drugOrders.length,\r\n          dispensedCount: totalDrugsPrescribed(prescription.drugOrders),\r\n         // type:   drugType(prescription.formDataObj),\r\n          actions: (\r\n            \r\n            <Link\r\n              to={{\r\n                pathname: \"/prescriptions\",\r\n                state: prescription,\r\n               \r\n              }}\r\n              style={{ cursor: \"pointer\", color: \"blue\", fontStyle: \"bold\" }}>\r\n              <Tooltip title=\"View Prescription\">\r\n                <IconButton aria-label=\"View Prescription\">\r\n                  <VisibilityIcon color=\"primary\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Link>\r\n          ),\r\n        }))}\r\n                  options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\"\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '300%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientSearch;\r\n\r\n\r\n","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PatientPrescriptions.js",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"import React, { useState, Fragment} from \"react\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { Table } from 'reactstrap'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport Moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DispenseModal from './DispenseDrug'\r\n// import DispenseModal from './DrugDispenseFormIo';\r\n// import DispenseModalUpdate from './DrugDispenseUpdateFormIo';\r\nimport ViewModal from './ViewModalForm';\r\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Spinner } from 'reactstrap';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nMoment.locale(\"en\");\r\n//momentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst Prescriptions = (props) => {\r\n\r\n const prescriptionOrder  = props  && props.patientObj  ? props.patientObj : {}\r\n   \r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState('')\r\n  const [modal, setModal] = useState(false);\r\n  const toggleModal = () => setModal(!modal)\r\n  const [modal1, setModal1] = useState(false);\r\n  const toggleModal1 = () => setModal1(!modal1)\r\n  const [modal2, setModal2] = useState(false);\r\n  const toggleModal2 = () => setModal2(!modal2)\r\n  const [formData, setFormData] = useState(props  && props.patientObj  ? props.patientObj : {});\r\n  const [drugDetails, setDrugDetails] = useState({})\r\n\r\nconst updateFormData = (data) =>{\r\n\r\n    setLoading(true);\r\n    //   console.log(formData)\r\n    //   // const index = formData.findIndex(x => x.drugOrders.id == drugOrders.id);\r\n\r\n    //   // formData[index] = data;\r\n    //   // setFormData(formData);\r\n    // setLoading(false);\r\n    }\r\n\r\n  const toggle = (form) => {\r\n    //console.log(form)\r\n    setDrugDetails({ ...drugDetails, ...form });\r\n    setModal(!modal);\r\n    \r\n  } \r\n  const toggle1 = (form) => {\r\n    //console.log(form)\r\n    setDrugDetails({ ...drugDetails, ...form });\r\n    setModal1(!modal1)\r\n  }\r\n\r\n  const toggle2 = (form) => {\r\n    console.log(form)\r\n    setDrugDetails({ ...drugDetails, ...form });\r\n    setModal2(!modal2)\r\n  }\r\n  const closeBtn = (\r\n    <button className=\"close\" onClick={toggle}>\r\n      &times;\r\n    </button>\r\n  );\r\n\r\n   const closeBtn1 = (\r\n     <button className=\"close\" onClick={toggle1}>\r\n       &times;\r\n     </button>\r\n   );\r\n\r\n\r\n const Actions = (form) => { \r\n   return (\r\n     <Menu>\r\n       <MenuButton\r\n         style={{\r\n           backgroundColor: \"#3F51B5\",\r\n           color: \"#fff\",\r\n           border: \"2px solid #3F51B5\",\r\n           borderRadius: \"4px\",\r\n         }}\r\n       >\r\n         Action<span aria-hidden>▾</span>\r\n       </MenuButton>\r\n       <MenuList style={{ hover: \"#eee\" }}>\r\n         {form && form.status === 0 ? (\r\n\r\n           <MenuItem onSelect={() => \r\n            toggle(form)\r\n            }>\r\n             <i\r\n               className=\"fa fa-pencil\"\r\n               aria-hidden=\"true\"\r\n               size=\"15\"\r\n               style={{ cursor: \"pointer\", color: \"#000\" }}\r\n             >\r\n               &nbsp; {\"\"} Dispense drugs {}\r\n             </i>\r\n           </MenuItem>\r\n\r\n        \r\n         ) : (\r\n           <MenuItem onSelect={() => toggle(form)} >\r\n             <i\r\n               className=\"fa fa-pencil\"\r\n               aria-hidden=\"true\"\r\n               size=\"15\"\r\n               style={{ cursor: \"pointer\", color: \"#000\" }}\r\n             >\r\n               &nbsp; {\"\"} Update details\r\n             </i>\r\n           </MenuItem>\r\n         )}\r\n         {form && form.status !=0  ? (\r\n            <MenuItem onSelect={() => toggle1(form)}>\r\n              <i\r\n                className=\"fa fa-eye\"\r\n                aria-hidden=\"true\"\r\n                size=\"15\"\r\n                style={{ cursor: \"pointer\", color: \"#000\" }}\r\n              >\r\n                &nbsp; {\"\"}View details\r\n              </i>\r\n            </MenuItem>\r\n         )\r\n         :\r\n         \"\"\r\n      }\r\n       </MenuList>\r\n     </Menu>\r\n   );\r\n };\r\n  return (\r\n    <React.Fragment>\r\n        <Card body>\r\n        <Link to={\"/\"} >\r\n            <ButtonMui\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                //startIcon={<FaUserPlus size=\"10\"/>}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n            </ButtonMui>\r\n            </Link>     \r\n          <div>\r\n            {formData.drugOrders.length >= 0 ? (\r\n              <Fragment>\r\n                   <h3>Drug Order Details</h3>\r\n                    <br />\r\n                    \r\n                            <Table striped responsive >\r\n                              <thead style={{backgroundColor: \"#014d88\", color: \"#fff\"}}>\r\n                                <tr>\r\n                                  <th>Name</th>\r\n                                  <th>Dosage</th>\r\n                                  <th>Duration</th>\r\n                                  <th>Date Prescribed</th>\r\n                                  <th>Date Dispensed</th>\r\n                                  <th></th>\r\n                                </tr>\r\n                              </thead>\r\n                              \r\n                              \r\n                                <tbody >\r\n                                {!loading  ?  formData.drugOrders.map((form) => (\r\n                                  \r\n                                  form !==null?\r\n                                  <tr key={form.id}>\r\n                                    <td>{form.drugName}</td>\r\n                                    <td>{form.dosageFrequency && form.dosageStrengthUnit ? form.dosageFrequency + ' ' + form.dosageStrengthUnit : '' }</td>\r\n                                    <td>{form.duration && form.duration ? form.duration + ' ' + form.durationUnit : ''}</td>\r\n                                    <td>{Moment(form.dateTimePrescribed).format(\"YYYY-MM-DD  HH:mm:ss\")}</td>\r\n                                    <td>{ form.dateTimeDispensed !== null ? form.dateTimeDispensed : Moment(new Date()).format(\"YYYY-MM-DD  HH:mm:ss\") }</td>\r\n                                    <td>{Actions(form)}</td>\r\n                                  </tr>\r\n                                  :\r\n                                   <tr></tr>\r\n                                  ))\r\n                                  :<p> <Spinner color=\"primary\" /> Loading Please Wait</p>\r\n                                } \r\n                                </tbody>\r\n                               \r\n                            </Table>\r\n                            <br />\r\n                       \r\n              </Fragment>\r\n            ) : (\r\n              <div style={{height:'300px'}}>\r\n                <p>\r\n                  {\" \"}\r\n                  {/* <Spinner color=\"primary\" /> Loading Please Wait.. */}\r\n                  No Prescription details. Please try again...\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        \r\n     \r\n      {modal || modal1 ? \r\n      (\r\n        <>\r\n        <DispenseModal  modalstatus={modal} togglestatus={toggleModal} datasample={drugDetails} updateFormData={updateFormData}/>\r\n        <ViewModal modalstatus={modal1} togglestatus={toggleModal1} datasample={drugDetails}/>\r\n       </>\r\n      ) \r\n      : \"\"\r\n      } \r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Prescriptions;\r\n\r\n","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["95","96","97","98","99","100","101","102","103","104","105"],"import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { Grid, Step, Label, Segment, Icon } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\n//momentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n    const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n        if (age_now === 0) {\r\n                return m + \" month(s)\";\r\n            }\r\n            return age_now + \" year(s)\";\r\n    };\r\n\r\n  //console.log(patientObj)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel defaultExpanded>\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                <Row>\r\n                    \r\n                    <Col md={11}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\"}}>\r\n                        {patientObj.patientFirstName + \" \" + patientObj.patientLastName }\r\n                        </b>\r\n                        \r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b>{patientObj.patientId }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b>{patientObj.patientDob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b>{calculate_age(moment(patientObj.PatientDob).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                       <b>{patientObj.patientGender}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b>{patientObj.patientPhoneNumber }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b>{patientObj.patientAddress } </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                    \r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n               {/* <ExpansionPanelDetails className={classes.details}>\r\n                <div className={classes.column} >\r\n                    <Button\r\n                            color='red'\r\n                            content='BloodType'\r\n                            //icon='heart'\r\n                            label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                            />\r\n                            \r\n                    </div>\r\n                <div className={classes.column}>\r\n                <Button\r\n                            basic\r\n                            color='blue'\r\n                            content='Height'\r\n                            icon='fork'\r\n                            label={{\r\n                                as: 'a',\r\n                                basic: true,\r\n                                color: 'blue',\r\n                                pointing: 'left',\r\n                                content: '74.5 in',\r\n                            }}\r\n                            />\r\n                </div>\r\n                <div className={classes.column}>\r\n                <Button\r\n                            basic\r\n                            color='blue'\r\n                            content='Weight'\r\n                            icon='fork'\r\n                            label={{\r\n                                as: 'a',\r\n                                basic: true,\r\n                                color: 'blue',\r\n                                pointing: 'left',\r\n                                content: '74.5 in',\r\n                            }}\r\n                            />\r\n                </div>\r\n                <div className={classNames(classes.column, classes.helper)}>\r\n                    <Typography variant=\"caption\">\r\n                   \r\n                    </Typography>\r\n                </div>\r\n                </ExpansionPanelDetails> */}\r\n                <Divider />\r\n                <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\DispenseDrug.js",["106","107","108","109","110"],"C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\api.js",[],"C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PrescriptionObj.js",[],"C:\\Users\\user\\Desktop\\usaid_projects\\pharmacy-module\\src\\main\\webapp\\jsx\\components\\Prescriptions\\ViewModalForm.js",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],{"ruleId":"126","severity":1,"message":"127","line":4,"column":41,"nodeType":"128","messageId":"129","endLine":4,"endColumn":47},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"126","severity":1,"message":"127","line":3,"column":19,"nodeType":"128","messageId":"129","endLine":3,"endColumn":25},{"ruleId":"126","severity":1,"message":"134","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":20},{"ruleId":"126","severity":1,"message":"135","line":48,"column":12,"nodeType":"128","messageId":"129","endLine":48,"endColumn":15},{"ruleId":"126","severity":1,"message":"136","line":48,"column":17,"nodeType":"128","messageId":"129","endLine":48,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":9,"column":26,"nodeType":"139","messageId":"140","endLine":9,"endColumn":40,"fix":"141"},{"ruleId":"126","severity":1,"message":"142","line":51,"column":9,"nodeType":"128","messageId":"129","endLine":51,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":71,"column":30,"nodeType":"145","messageId":"146","endLine":71,"endColumn":32},{"ruleId":"126","severity":1,"message":"147","line":77,"column":9,"nodeType":"128","messageId":"129","endLine":77,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":80,"column":26,"nodeType":"145","messageId":"146","endLine":80,"endColumn":28},{"ruleId":"126","severity":1,"message":"148","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":21},{"ruleId":"126","severity":1,"message":"149","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":17},{"ruleId":"126","severity":1,"message":"150","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":23},{"ruleId":"126","severity":1,"message":"151","line":18,"column":3,"nodeType":"128","messageId":"129","endLine":18,"endColumn":11},{"ruleId":"126","severity":1,"message":"152","line":19,"column":3,"nodeType":"128","messageId":"129","endLine":19,"endColumn":13},{"ruleId":"126","severity":1,"message":"153","line":20,"column":3,"nodeType":"128","messageId":"129","endLine":20,"endColumn":6},{"ruleId":"126","severity":1,"message":"154","line":21,"column":3,"nodeType":"128","messageId":"129","endLine":21,"endColumn":6},{"ruleId":"126","severity":1,"message":"155","line":25,"column":8,"nodeType":"128","messageId":"129","endLine":25,"endColumn":19},{"ruleId":"126","severity":1,"message":"156","line":26,"column":8,"nodeType":"128","messageId":"129","endLine":26,"endColumn":18},{"ruleId":"126","severity":1,"message":"157","line":70,"column":8,"nodeType":"128","messageId":"129","endLine":70,"endColumn":25},{"ruleId":"126","severity":1,"message":"158","line":72,"column":9,"nodeType":"128","messageId":"129","endLine":72,"endColumn":16},{"ruleId":"126","severity":1,"message":"159","line":79,"column":9,"nodeType":"128","messageId":"129","endLine":79,"endColumn":21},{"ruleId":"126","severity":1,"message":"160","line":80,"column":20,"nodeType":"128","messageId":"129","endLine":80,"endColumn":31},{"ruleId":"126","severity":1,"message":"161","line":106,"column":9,"nodeType":"128","messageId":"129","endLine":106,"endColumn":16},{"ruleId":"126","severity":1,"message":"162","line":111,"column":9,"nodeType":"128","messageId":"129","endLine":111,"endColumn":17},{"ruleId":"126","severity":1,"message":"163","line":117,"column":10,"nodeType":"128","messageId":"129","endLine":117,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":166,"column":31,"nodeType":"166","messageId":"167","endLine":166,"endColumn":33},{"ruleId":"126","severity":1,"message":"168","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":24},{"ruleId":"126","severity":1,"message":"169","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":18},{"ruleId":"126","severity":1,"message":"170","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":29},{"ruleId":"126","severity":1,"message":"156","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":18},{"ruleId":"126","severity":1,"message":"171","line":13,"column":10,"nodeType":"128","messageId":"129","endLine":13,"endColumn":16},{"ruleId":"126","severity":1,"message":"172","line":14,"column":10,"nodeType":"128","messageId":"129","endLine":14,"endColumn":14},{"ruleId":"126","severity":1,"message":"173","line":14,"column":16,"nodeType":"128","messageId":"129","endLine":14,"endColumn":20},{"ruleId":"126","severity":1,"message":"174","line":14,"column":22,"nodeType":"128","messageId":"129","endLine":14,"endColumn":27},{"ruleId":"126","severity":1,"message":"175","line":14,"column":29,"nodeType":"128","messageId":"129","endLine":14,"endColumn":36},{"ruleId":"126","severity":1,"message":"176","line":14,"column":38,"nodeType":"128","messageId":"129","endLine":14,"endColumn":42},{"ruleId":"126","severity":1,"message":"150","line":18,"column":8,"nodeType":"128","messageId":"129","endLine":18,"endColumn":23},{"ruleId":"126","severity":1,"message":"177","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"150","line":20,"column":8,"nodeType":"128","messageId":"129","endLine":20,"endColumn":23},{"ruleId":"126","severity":1,"message":"178","line":89,"column":13,"nodeType":"128","messageId":"129","endLine":89,"endColumn":24},{"ruleId":"126","severity":1,"message":"179","line":94,"column":12,"nodeType":"128","messageId":"129","endLine":94,"endColumn":18},{"ruleId":"126","severity":1,"message":"180","line":130,"column":25,"nodeType":"128","messageId":"129","endLine":130,"endColumn":32},{"ruleId":"126","severity":1,"message":"177","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"149","line":8,"column":8,"nodeType":"128","messageId":"129","endLine":8,"endColumn":17},{"ruleId":"126","severity":1,"message":"181","line":10,"column":8,"nodeType":"128","messageId":"129","endLine":10,"endColumn":16},{"ruleId":"126","severity":1,"message":"182","line":11,"column":8,"nodeType":"128","messageId":"129","endLine":11,"endColumn":18},{"ruleId":"126","severity":1,"message":"183","line":12,"column":26,"nodeType":"128","messageId":"129","endLine":12,"endColumn":31},{"ruleId":"126","severity":1,"message":"184","line":15,"column":8,"nodeType":"128","messageId":"129","endLine":15,"endColumn":13},{"ruleId":"126","severity":1,"message":"185","line":18,"column":18,"nodeType":"128","messageId":"129","endLine":18,"endColumn":25},{"ruleId":"126","severity":1,"message":"186","line":18,"column":27,"nodeType":"128","messageId":"129","endLine":18,"endColumn":32},{"ruleId":"126","severity":1,"message":"150","line":20,"column":8,"nodeType":"128","messageId":"129","endLine":20,"endColumn":23},{"ruleId":"126","severity":1,"message":"187","line":62,"column":10,"nodeType":"128","messageId":"129","endLine":62,"endColumn":17},{"ruleId":"126","severity":1,"message":"178","line":67,"column":13,"nodeType":"128","messageId":"129","endLine":67,"endColumn":24},{"ruleId":"126","severity":1,"message":"158","line":71,"column":11,"nodeType":"128","messageId":"129","endLine":71,"endColumn":18},{"ruleId":"126","severity":1,"message":"179","line":72,"column":12,"nodeType":"128","messageId":"129","endLine":72,"endColumn":18},{"ruleId":"126","severity":1,"message":"188","line":72,"column":20,"nodeType":"128","messageId":"129","endLine":72,"endColumn":29},{"ruleId":"126","severity":1,"message":"189","line":73,"column":12,"nodeType":"128","messageId":"129","endLine":73,"endColumn":27},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["190"],"no-negated-in-lhs",["191"],"'makeStyles' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"192","text":"193"},"'prescriptions' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'drugType' is assigned a value but never used.","'TiArrowBack' is defined but never used.","'MatButton' is defined but never used.","'momentLocalizer' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Breadcrumbs' is defined but never used.","'Typography' is defined but never used.","'prescriptionOrder' is assigned a value but never used.","'classes' is assigned a value but never used.","'toggleModal2' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'toggle2' is assigned a value but never used.","'closeBtn' is assigned a value but never used.","'closeBtn1' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'classNames' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Step' is defined but never used.","'Label' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","'useEffect' is defined but never used.","'buttonLabel' is assigned a value but never used.","'saving' is assigned a value but never used.","'newData' is assigned a value but never used.","'SaveIcon' is defined but never used.","'CancelIcon' is defined but never used.","'toast' is defined but never used.","'axios' is defined but never used.","'baseUrl' is defined but never used.","'token' is defined but never used.","'history' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'drugDispenseObj' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[360,374],"token"]