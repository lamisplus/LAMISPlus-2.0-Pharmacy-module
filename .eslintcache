[{"/Users/mac/Desktop/Projects/pharmacy-module/src/index.js":"1","/Users/mac/Desktop/Projects/pharmacy-module/src/App.js":"2","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/reportWebVitals.js":"3","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/context/ThemeContext.js":"4","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/context/ThemeDemo.js":"5","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Home.js":"6","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/Index.js":"7","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PrescriptionList.js":"8","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PatientPrescriptions.js":"9","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Patient/PatientCard.js":"10","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/api.js":"11","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PrescriptionObj.js":"12","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/DispenseDrug.js":"13","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/ViewModalForm.js":"14","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/layouts/SplitActionButton.js":"15"},{"size":730,"mtime":1663411405697,"results":"16","hashOfConfig":"17"},{"size":1025,"mtime":1663411405697,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1663411408409,"results":"19","hashOfConfig":"17"},{"size":8947,"mtime":1663411406353,"results":"20","hashOfConfig":"17"},{"size":2920,"mtime":1663411406353,"results":"21","hashOfConfig":"17"},{"size":1404,"mtime":1663411408391,"results":"22","hashOfConfig":"17"},{"size":1673,"mtime":1663411408402,"results":"23","hashOfConfig":"17"},{"size":6880,"mtime":1663420538645,"results":"24","hashOfConfig":"17"},{"size":8007,"mtime":1663420538645,"results":"25","hashOfConfig":"17"},{"size":7090,"mtime":1664531127093,"results":"26","hashOfConfig":"17"},{"size":414,"mtime":1664531869007,"results":"27","hashOfConfig":"17"},{"size":89321,"mtime":1663411408405,"results":"28","hashOfConfig":"17"},{"size":12991,"mtime":1663420538643,"results":"29","hashOfConfig":"17"},{"size":9283,"mtime":1663420538646,"results":"30","hashOfConfig":"17"},{"size":4642,"mtime":1664529104081,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1l9jcb3",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Desktop/Projects/pharmacy-module/src/index.js",["71"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\";  \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <BrowserRouter basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </BrowserRouter>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["72","73"],"/Users/mac/Desktop/Projects/pharmacy-module/src/App.js",["74"],"import React from \"react\";\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./../src/main/webapp/css/style.css\";\n\nimport Home from './main/webapp/jsx/components/Home'\nimport Prescription from './main/webapp/jsx/components/Prescriptions/Index'\n//import PatientMediationHistory from './main/webapp/jsx/components/Medication/PatientMediationHistory'\n\nexport default function App() {\n  return (\n\n      <div>\n      <ToastContainer />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n         \n          <Route path=\"/prescriptions\">\n            <Prescription />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        \n          \n        </Switch>\n      </div>\n \n  );\n}\n\n\n\n\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/reportWebVitals.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/context/ThemeContext.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/context/ThemeDemo.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Home.js",["75"],"import React, {useState, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\nimport PrescriptionList from './Prescriptions/PrescriptionList'\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = () => {\n    const [key, setKey] = useState('home');\n\n\n  return (\n    <Fragment>\n     \n      <Row>\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\n\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Pharmacy</h4></li>\n\t\t\t</ol>\n\t\t</div>\n        <Col xl={12}>\n          <Card style={divStyle}>\n            \n            <Card.Body style={{marginTop:\"-20px\"}}>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"mb-3\"\n                    >\n                   \n                    <Tab eventKey=\"home\" title=\"Prescriptions\">                   \n                      <PrescriptionList />\n                    </Tab>\n                    \n                    </Tabs>\n\n\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/Index.js",["76","77"],"import React,{useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport PatientCardDetail from './../Patient/PatientCard';\nimport PatientPrescriptions from './PatientPrescriptions';\nimport { useHistory } from \"react-router-dom\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\nfunction PatientCard(props) {\n    let history = useHistory();\n    const [key, setKey] = useState('home');\n    const { classes } = props;\n\n    const patientObj = history.location && history.location.state ? history.location.state : {}\n    console.log(patientObj)\n  return (\n    <div className={classes.root}>\n        \n        <Card >\n        <CardContent>\n        <PatientCardDetail patientObj={patientObj}/>\n        <br/>\n           \n        <PatientPrescriptions  patientObj={patientObj}/> \n\n         </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(PatientCard);\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PrescriptionList.js",["78","79","80","81","82","83","84","85","86","87"],"import React, {useEffect, useState} from 'react';\nimport MaterialTable from 'material-table';\n\nimport { Link } from 'react-router-dom'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n import axios from \"axios\";\nimport { url as baseUrl, token as token  } from \"../../../api\";\nimport {PrescriptionObj} from './PrescriptionObj';\nimport SplitActionButton from '../../layouts/SplitActionButton';\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\n\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst PatientSearch = (props) => {\n  const prescriptions = PrescriptionObj;\n  const [prescriptionList, setPrescriptionList] = useState([])\n    useEffect(() => {\n        Prescribtions();\n    }, []);\n    \n    ///GET LIST OF Drug Prescriptions\n    async function Prescribtions() {\n        axios\n            .get(`${baseUrl}drug-orders/patients`,{ headers: {\"Authorization\" : `Bearer ${token}`} })\n            .then((response) => {\n                console.log(\"pres\", response)\n                setPrescriptionList(response.data);\n            })\n            .catch((error) => {\n            });\n    }\n    //Get total drug dispensed \n    const totalDrugsPrescribed = (drugsArray) => {\n      const dispensed = []\n        drugsArray.map(drugs => {\n            if (drugs.status === 1)\n              dispensed.push(drugs)\n        })\n    return dispensed.length\n  }\n    const drugType = (drugsArray) => {\n    //console.log(prescriptions)\n    const type = []\n    drugsArray.map(drugs => {\n        if (drugs.data.type === 1){\n          type.push('Drug')\n        }else if(drugs.data.type === 0){\n          type.push('Regimen')\n        }else{\n          type.push('')\n        }\n       \n    })\n    \n    return type\n  }\n\n    const actionItems = prescription => {\n              return  [\n                  {\n                      name:'View',\n                      type:'link',\n                      icon:<FaEye  size=\"22\"/>,\n                      to:{\n                          pathname: \"/prescriptions\",\n                          state: prescription\n                      }\n                  },\n\n    //              {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\n    //                      {\n    //                          name:'Print Manifest',\n    //                          type:'link',\n    //                          icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\n    //                          to:{\n    //                              pathname: \"/print-manifest\",\n    //                              state: { sampleObj: row, permissions:permissions  }\n    //                          }\n    //                      }\n    //              )},\n               ]\n           }\n \n  return (\n    <div>\n      <MaterialTable\n       icons={tableIcons}\n        title=\"Drug Prescriptions\"\n        columns={[\n          { title: \"Patient ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n          },\n          { title: \"Prescription Date\", field: \"date\", type: \"date\", filtering: false, },\n          {\n            title: \"Total Prescribed\",\n            field: \"prescribedCount\",\n            filtering: false,\n          },\n          {\n            title: \"Total Dispensed\",\n            field: \"dispensedCount\",\n            filtering: false,\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        data={ prescriptionList.map((prescription) => ({\n          Id: prescription.patientHospitalNumber,\n          name: prescription.patientFirstName + \" \" + prescription.patientLastName,\n          date: prescription.drugOrders[0].dateTimePrescribed.replace(\"@\",\" \"),\n          prescribedCount: prescription.drugOrders.length,\n          dispensedCount: totalDrugsPrescribed(prescription.drugOrders),\n         // type:   drugType(prescription.formDataObj),\n          actions: (\n                <div>\n                   <SplitActionButton actions={actionItems(prescription)} />\n                </div>\n          ),\n        }))}\n                  options={{\n                    headerStyle: {\n                        backgroundColor: \"#014d88\",\n                        color: \"#fff\"\n                    },\n                    searchFieldStyle: {\n                        width : '300%',\n                        margingLeft: '250px',\n                    },\n                    filtering: false,\n                    exportButton: false,\n                    searchFieldAlignment: 'left',\n                    pageSizeOptions:[10,20,100],\n                    pageSize:10,\n                    debounceInterval: 400\n                }}\n      />\n    </div>\n  );\n}\n\nexport default PatientSearch;\n\n\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PatientPrescriptions.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"import React, { useState, Fragment} from \"react\";\nimport { TiArrowBack } from \"react-icons/ti\";\nimport MatButton from '@material-ui/core/Button';\nimport { Table } from 'reactstrap'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport Moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport DispenseModal from './DispenseDrug'\n// import DispenseModal from './DrugDispenseFormIo';\n// import DispenseModalUpdate from './DrugDispenseUpdateFormIo';\nimport ViewModal from './ViewModalForm';\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport { Spinner } from 'reactstrap';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n} from \"reactstrap\";\n\nimport ButtonMui from \"@material-ui/core/Button\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\n\nMoment.locale(\"en\");\n//momentLocalizer();\n\nconst useStyles = makeStyles((theme) => ({\n\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n\n  input: {\n    display: \"none\",\n  },\n}));\n\nconst Prescriptions = (props) => {\n\n const prescriptionOrder  = props  && props.patientObj  ? props.patientObj : {}\n   \n  const classes = useStyles();\n  const [loading, setLoading] = useState('')\n  const [modal, setModal] = useState(false);\n  const toggleModal = () => setModal(!modal)\n  const [modal1, setModal1] = useState(false);\n  const toggleModal1 = () => setModal1(!modal1)\n  const [modal2, setModal2] = useState(false);\n  const toggleModal2 = () => setModal2(!modal2)\n  const [formData, setFormData] = useState(props  && props.patientObj  ? props.patientObj : {});\n  const [drugDetails, setDrugDetails] = useState({})\n\nconst updateFormData = (data) =>{\n\n    setLoading(true);\n    //   console.log(formData)\n    //   // const index = formData.findIndex(x => x.drugOrders.id == drugOrders.id);\n\n    //   // formData[index] = data;\n    //   // setFormData(formData);\n    // setLoading(false);\n    }\n\n  const toggle = (form) => {\n    //console.log(form)\n    setDrugDetails({ ...drugDetails, ...form });\n    setModal(!modal);\n    \n  } \n  const toggle1 = (form) => {\n    //console.log(form)\n    setDrugDetails({ ...drugDetails, ...form });\n    setModal1(!modal1)\n  }\n\n  const toggle2 = (form) => {\n    console.log(form)\n    setDrugDetails({ ...drugDetails, ...form });\n    setModal2(!modal2)\n  }\n  const closeBtn = (\n    <button className=\"close\" onClick={toggle}>\n      &times;\n    </button>\n  );\n\n   const closeBtn1 = (\n     <button className=\"close\" onClick={toggle1}>\n       &times;\n     </button>\n   );\n\n\n const Actions = (form) => { \n   return (\n     <Menu>\n       <MenuButton\n         style={{\n           backgroundColor: \"#3F51B5\",\n           color: \"#fff\",\n           border: \"2px solid #3F51B5\",\n           borderRadius: \"4px\",\n         }}\n       >\n         Action<span aria-hidden>▾</span>\n       </MenuButton>\n       <MenuList style={{ hover: \"#eee\" }}>\n         {form && form.status === 0 ? (\n\n           <MenuItem onSelect={() => \n            toggle(form)\n            }>\n             <i\n               className=\"fa fa-pencil\"\n               aria-hidden=\"true\"\n               size=\"15\"\n               style={{ cursor: \"pointer\", color: \"#000\" }}\n             >\n               &nbsp; {\"\"} Dispense drugs {}\n             </i>\n           </MenuItem>\n\n        \n         ) : (\n           <MenuItem onSelect={() => toggle(form)} >\n             <i\n               className=\"fa fa-pencil\"\n               aria-hidden=\"true\"\n               size=\"15\"\n               style={{ cursor: \"pointer\", color: \"#000\" }}\n             >\n               &nbsp; {\"\"} Update details\n             </i>\n           </MenuItem>\n         )}\n         {form && form.status !=0  ? (\n            <MenuItem onSelect={() => toggle1(form)}>\n              <i\n                className=\"fa fa-eye\"\n                aria-hidden=\"true\"\n                size=\"15\"\n                style={{ cursor: \"pointer\", color: \"#000\" }}\n              >\n                &nbsp; {\"\"}View details\n              </i>\n            </MenuItem>\n         )\n         :\n         \"\"\n      }\n       </MenuList>\n     </Menu>\n   );\n };\n  return (\n    <React.Fragment>\n        <Card body>\n        <Link to={\"/\"} >\n            <ButtonMui\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end ms-2\"\n                //startIcon={<FaUserPlus size=\"10\"/>}\n            >\n                <span style={{ textTransform: \"capitalize\" }}>Back</span>\n            </ButtonMui>\n            </Link>     \n          <div>\n            {formData.drugOrders.length >= 0 ? (\n              <Fragment>\n                   <h3>Drug Order Details</h3>\n                    <br />\n                    \n                            <Table striped responsive >\n                              <thead style={{backgroundColor: \"#014d88\", color: \"#fff\"}}>\n                                <tr>\n                                  <th>Name</th>\n                                  <th>Dosage</th>\n                                  <th>Duration</th>\n                                  <th>Date Prescribed</th>\n                                  <th>Date Dispensed</th>\n                                  <th></th>\n                                </tr>\n                              </thead>\n                              \n                              \n                                <tbody >\n                                {!loading  ?  formData.drugOrders.map((form) => (\n                                  \n                                  form !==null?\n                                  <tr key={form.id}>\n                                    <td>{form.drugName}</td>\n                                    <td>{form.dosageFrequency && form.dosageStrengthUnit ? form.dosageFrequency + ' ' + form.dosageStrengthUnit : '' }</td>\n                                    <td>{form.duration && form.duration ? form.duration + ' ' + form.durationUnit : ''}</td>\n                                    <td>{Moment(form.dateTimePrescribed).format(\"YYYY-MM-DD  HH:mm:ss\")}</td>\n                                    <td>{ form.dateTimeDispensed !== null ? form.dateTimeDispensed.replace(\"@\", \" \") : Moment(new Date()).format(\"YYYY-MM-DD  HH:mm:ss\") }</td>\n                                    <td>{Actions(form)}</td>\n                                  </tr>\n                                  :\n                                   <tr></tr>\n                                  ))\n                                  :<p> <Spinner color=\"primary\" /> Loading Please Wait</p>\n                                } \n                                </tbody>\n                               \n                            </Table>\n                            <br />\n                       \n              </Fragment>\n            ) : (\n              <div style={{height:'300px'}}>\n                <p>\n                  {\" \"}\n                  {/* <Spinner color=\"primary\" /> Loading Please Wait.. */}\n                  No Prescription details. Please try again...\n                </p>\n              </div>\n            )}\n          </div>\n        \n     \n      {modal || modal1 ? \n      (\n        <>\n        <DispenseModal  modalstatus={modal} togglestatus={toggleModal} datasample={drugDetails} updateFormData={updateFormData}/>\n        <ViewModal modalstatus={modal1} togglestatus={toggleModal1} datasample={drugDetails}/>\n       </>\n      ) \n      : \"\"\n      } \n      </Card>\n    </React.Fragment>\n  );\n}\n\nexport default Prescriptions;\n\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Patient/PatientCard.js",["105","106","107","108","109","110","111","112","113","114","115","116"],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/api.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PrescriptionObj.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/DispenseDrug.js",["117","118","119","120","121"],"import React, {useState, useEffect} from 'react';\nimport {  Modal, ModalHeader, ModalBody,\n    Col,Input,\n    FormGroup,\n    Label,Card, CardBody\n} from 'reactstrap';\n\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/styles.css\";\nimport axios from \"axios\";\nimport { Row } from \"react-bootstrap\";\nimport { Segment,  } from 'semantic-ui-react'\nimport { url  as baseUrl, token} from \"../../../api\";\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport { useHistory } from 'react-router-dom';\n\nMoment.locale('en');\n//momentLocalizer();\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        border:'2px solid #014d88',\n        borderRadius:'0px',\n        fontSize:'16px',\n        color:'#000'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n    inputGroupText:{\n        backgroundColor:'#014d88',\n        fontWeight:\"bolder\",\n        color:'#fff',\n        borderRadius:'0px'\n    },\n    label:{\n        fontSize:'16px',\n        color:'rgb(153, 46, 98)',\n        fontWeight:'600'\n    }\n}))\n\nconst DispenseModal = (props) => {\n    const history = useHistory();\n   const drugDetails= props && props.datasample ? props.datasample : {}\n   //console.log(drugDetails)\n   //console.log(props)\n\n    const { buttonLabel, className } = props;\n    const toggle = props.togglestatus\n    const modal = props.modalstatus\n    const closeBtn = props.close\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [drugDispenseObj] = useState({drugDispenses:[]})\n    const [formValues, setFormValues] = useState({\n    brand: \"\",\n    comment: \"\",\n    dateTimeDispensed: \"\",\n    dispensedBy: \"\",\n    dosageFrequency: drugDetails.dosageFrequency,\n    dosageStrength: drugDetails.dosageStrength,\n    dosageStrengthUnit: drugDetails.dosageStrengthUnit,\n    drugName: drugDetails.drugName,\n    drugOrderId: drugDetails.id,\n    duration: drugDetails.duration,\n    durationUnit:drugDetails.durationUnit,\n    otherDetails: {},\n    patientId: drugDetails.patientId,\n    quantity:\"\",\n    startDate: drugDetails.startDate,\n    type: \"\",\n    unit: \"\" });\n\n    const handleInputChange = (e) => {\n        setFormValues ({ ...formValues, [e.target.name]: e.target.value });\n    }\n\n    const handleDispense = (e) => {\n        e.preventDefault()\n        drugDispenseObj.drugDispenses=[formValues]\n        formValues.dateTimeDispensed=Moment(formValues.dateTimeDispensed).format(\"YYYY-MM-DD@HH:mm:ss\")\n        setSaving(true);\n            axios.post(`${baseUrl}drug-dispenses`, drugDispenseObj,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n              .then(response => {\n                  setSaving(false);\n                  const newData =  {...drugDetails, ...formValues}\n                  //console.log(newData)\n                  //drugDetails = newData\n                  //console.log(drugDetails)\n                  toast.success(\"Record save successful\");\n                  props.togglestatus()\n                  history.push('/');\n\n              })\n              .catch(error => {\n                console.log(\"error\", error)\n//                const newData =  {...drugDetails, ...formValues}\n//                drugDetails = newData\n//                console.log(drugDetails)\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n                  props.togglestatus()\n              });\n    };\n\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <ToastContainer autoClose={3000} hideProgressBar />\n                    <Modal\n                        isOpen={modal}\n                        toggle={toggle}\n                        className={className}\n                        size=\"lg\"\n                    >\n                        <ModalHeader toggle={toggle} close={closeBtn}>\n                            Dispensing\n                        </ModalHeader>\n                        <ModalBody>\n                            <Col lg={12}>                           \n                                <Row>                                    \n                                    <Col xl={12} >\n                                    <Segment color='teal'>\n                                        <Row>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Drug Name :</strong> <p>{drugDetails.drugName}</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Date Prescribed : </strong> <p>{drugDetails.dateTimePrescribed.replace(\"@\", \" \")}</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Dose Frequency :</strong><p>{drugDetails.dosageFrequency} daily</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Start Date :</strong><p>{drugDetails.startDate}</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-1\">\n                                                <strong>Instruction : </strong><p>{drugDetails.comment}</p>\n                                            </Col>\n                                        </Row>\n                                    </Segment>\n                                    </Col>\n                                   \n                                </Row>\n                                \n                            </Col>\n                            <br/>\n                            <form>\n                            <div className=\"row\">\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                            <Label for=\"maritalStatus\" className={classes.label}>Date Dispensed</Label>\n                                            \n                                            <Input\n                                                type=\"datetime-local\"\n                                                name=\"dateTimeDispensed\"\n                                                value={formValues.dateTimeDispensed}\n                                                id=\"dateTimeDispensed\"\n                                                placeholder=\"Date Dispensed\"\n                                                onChange={handleInputChange}\n                                                className={classes.input}\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                    </div>\n                                    <div className=\"row\">\n                                    <div className=\"form-group mb-3 col-md-5\">\n                                        <FormGroup>\n                                            <Label for=\"exampleNumber\" className={classes.label}>Brand name</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"brand\"\n                                                value={formValues.brand}\n                                                id=\"brand\"\n                                                //placeholder=\"brand name\"\n                                                onChange={handleInputChange}\n                                                className={classes.input}\n                                            />\n\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-3\">\n                                        <FormGroup>\n                                            <Label className={classes.label}>Quantity</Label>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"quantity\"\n                                                value={formValues.quantity}\n                                                id=\"quantity\"\n                                                onChange={handleInputChange}\n                                                className={classes.input}\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-4\">\n                                        <FormGroup>\n                                            <Label className={classes.label}>Unit</Label>\n                                            <Input\n                                                type=\"select\"\n                                                name=\"unit\"\n                                                id=\"unit\"\n                                                className={classes.input}\n                                                value={formValues.unit}\n                                                onChange={handleInputChange}>\n                                                <option value=\"Packs\">Packs</option>\n                                                <option value=\"Tablets\">Tablets</option>\n                                                <option value=\"ml\">ml</option>\n                                            </Input>\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-12\">\n                                        <FormGroup>\n                                            <Label for=\"comment\" className={classes.label}>Note</Label>\n                                            <Input\n                                                type=\"textarea\"\n                                                name=\"comment\"\n                                                id=\"comment\"\n                                                value={formValues.comment}\n                                                row=\"40\"\n                                                style={{ minHeight: 100, fontSize: 14 }}\n                                                onChange={handleInputChange}\n                                                className={classes.input}\n                                            ></Input>\n                                        </FormGroup>\n                                    </div>\n                                </div>\n                                <MatButton\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    startIcon={<SaveIcon />}\n                                    onClick={handleDispense}\n                                    // disabled={loading}\n                                >\n                                    Save\n                                </MatButton>\n\n                                <MatButton\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    onClick={toggle}\n                                    className={classes.button}\n                                    startIcon={<CancelIcon />}>\n                                    Cancel\n                                </MatButton>\n                            </form>\n                        </ModalBody>\n                    </Modal>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\n\nexport default DispenseModal;\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/ViewModalForm.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, {useState, useEffect} from 'react';\nimport {  Modal, ModalHeader, ModalBody,\n    Col,Input,\n    FormGroup,\n    Label,Card, CardBody\n} from 'reactstrap';\n\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/styles.css\";\nimport axios from \"axios\";\nimport { Row } from \"react-bootstrap\";\nimport { Segment,  } from 'semantic-ui-react'\nimport { url  as baseUrl, token} from \"../../../api\";\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport { useHistory } from 'react-router-dom';\n\nMoment.locale('en');\n//momentLocalizer();\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    }\n}))\n\nconst ViewDispenseModal = (props) => {\n   const history = useHistory();\n   const drugDetails= props && props.datasample ? props.datasample : {}\n   //console.log(drugDetails)\n   //console.log(props)\n\n    const { buttonLabel, className } = props;\n    const toggle = props.togglestatus\n    const modal = props.modalstatus\n    const closeBtn = props.close\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [drugDispenseObj] = useState({drugDispenses:[]})\n    const [formValues, setFormValues] = useState(drugDetails);\n\n    const handleInputChange = (e) => {\n        setFormValues ({ ...formValues, [e.target.name]: e.target.value });\n    }\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <ToastContainer autoClose={3000} hideProgressBar />\n                    <Modal\n                        isOpen={modal}\n                        toggle={toggle}\n                        className={className}\n                        size=\"lg\"\n                    >\n                        <ModalHeader toggle={toggle} close={closeBtn}>\n                            Dispensing\n                        </ModalHeader>\n                        <ModalBody>\n                            <Col lg={12}>\n                                <Row>\n                                    <Col xl={12} >\n                                    <Segment color='teal'>\n                                        <Row>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Drug Name :</strong> <p>{drugDetails.drugName}</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Date Prescribed : </strong> <p>{drugDetails.dateTimePrescribed.replace(\"@\", \" \")}</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Dose Frequency :</strong><p>{drugDetails.dosageFrequency} daily</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Start Date :</strong><p>{drugDetails.startDate}</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-1\">\n                                                <strong>Instruction : </strong><p>{drugDetails.comment}</p>\n                                            </Col>\n                                        </Row>\n                                    </Segment>\n                                    </Col>\n\n                                </Row>\n\n                            </Col>\n                            <br/>\n                            <form>\n                            <div className=\"row\">\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                            <Label for=\"dateTimeDispensed\">Date Dispensed</Label>\n\n                                            <Input\n                                                type=\"text\"\n                                                name=\"dateTimeDispensed\"\n                                                value={formValues.dateTimeDispensed === null ? \"\" :formValues.dateTimeDispensed.replace(\"@\", \" \")}\n                                                id=\"dateTimeDispensed\"\n                                                placeholder=\"Date Dispensed\"\n                                                onChange={handleInputChange}\n                                                disabled={true}\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                    </div>\n                                    <div className=\"row\">\n                                    <div className=\"form-group mb-3 col-md-5\">\n                                        <FormGroup>\n                                            <Label for=\"exampleNumber\">Brand name</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"brand\"\n                                                value={formValues.brand}\n                                                id=\"brand\"\n                                                placeholder=\"brand name\"\n                                                onChange={handleInputChange}\n                                                disabled={true}\n                                            />\n\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-3\">\n                                        <FormGroup>\n                                            <Label>Quantity</Label>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"quantity\"\n                                                value={formValues.dosageStrength}\n                                                id=\"quantity\"\n                                                onChange={handleInputChange}\n                                                disabled={true}\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-4\">\n                                        <FormGroup>\n                                            <Label >Unit</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"unit\"\n                                                id=\"unit\"\n                                                value={formValues.dosageStrengthUnit}\n                                                onChange={handleInputChange}\n                                                disabled={true}>\n                                            </Input>\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-12\">\n                                        <FormGroup>\n                                            <Label for=\"comment\">Note</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"comment\"\n                                                id=\"comment\"\n                                                row=\"40\"\n                                                value={formValues.comments}\n                                                style={{ minHeight: 100, fontSize: 14 }}\n                                                onChange={handleInputChange}\n                                                disabled={true}\n                                            ></Input>\n                                        </FormGroup>\n                                    </div>\n                                </div>\n\n                            </form>\n                        </ModalBody>\n                    </Modal>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\n\nexport default ViewDispenseModal;\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/layouts/SplitActionButton.js",["137","138","139","140","141","142","143","144","145","146","147","148"],{"ruleId":"149","severity":1,"message":"150","line":4,"column":41,"nodeType":"151","messageId":"152","endLine":4,"endColumn":47},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"149","severity":1,"message":"150","line":3,"column":19,"nodeType":"151","messageId":"152","endLine":3,"endColumn":25},{"ruleId":"149","severity":1,"message":"157","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":20},{"ruleId":"149","severity":1,"message":"158","line":48,"column":12,"nodeType":"151","messageId":"152","endLine":48,"endColumn":15},{"ruleId":"149","severity":1,"message":"159","line":48,"column":17,"nodeType":"151","messageId":"152","endLine":48,"endColumn":23},{"ruleId":"149","severity":1,"message":"160","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":14},{"ruleId":"149","severity":1,"message":"161","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":22},{"ruleId":"149","severity":1,"message":"162","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":15},{"ruleId":"149","severity":1,"message":"163","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":9,"column":26,"nodeType":"166","messageId":"167","endLine":9,"endColumn":40,"fix":"168"},{"ruleId":"149","severity":1,"message":"169","line":12,"column":16,"nodeType":"151","messageId":"152","endLine":12,"endColumn":26},{"ruleId":"149","severity":1,"message":"170","line":53,"column":9,"nodeType":"151","messageId":"152","endLine":53,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":73,"column":30,"nodeType":"173","messageId":"174","endLine":73,"endColumn":32},{"ruleId":"149","severity":1,"message":"175","line":79,"column":11,"nodeType":"151","messageId":"152","endLine":79,"endColumn":19},{"ruleId":"171","severity":1,"message":"172","line":82,"column":26,"nodeType":"173","messageId":"174","endLine":82,"endColumn":28},{"ruleId":"149","severity":1,"message":"176","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":21},{"ruleId":"149","severity":1,"message":"177","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":17},{"ruleId":"149","severity":1,"message":"178","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":23},{"ruleId":"149","severity":1,"message":"179","line":18,"column":3,"nodeType":"151","messageId":"152","endLine":18,"endColumn":11},{"ruleId":"149","severity":1,"message":"180","line":19,"column":3,"nodeType":"151","messageId":"152","endLine":19,"endColumn":13},{"ruleId":"149","severity":1,"message":"181","line":20,"column":3,"nodeType":"151","messageId":"152","endLine":20,"endColumn":6},{"ruleId":"149","severity":1,"message":"182","line":21,"column":3,"nodeType":"151","messageId":"152","endLine":21,"endColumn":6},{"ruleId":"149","severity":1,"message":"183","line":25,"column":8,"nodeType":"151","messageId":"152","endLine":25,"endColumn":19},{"ruleId":"149","severity":1,"message":"184","line":26,"column":8,"nodeType":"151","messageId":"152","endLine":26,"endColumn":18},{"ruleId":"149","severity":1,"message":"185","line":70,"column":8,"nodeType":"151","messageId":"152","endLine":70,"endColumn":25},{"ruleId":"149","severity":1,"message":"186","line":72,"column":9,"nodeType":"151","messageId":"152","endLine":72,"endColumn":16},{"ruleId":"149","severity":1,"message":"187","line":79,"column":9,"nodeType":"151","messageId":"152","endLine":79,"endColumn":21},{"ruleId":"149","severity":1,"message":"188","line":80,"column":20,"nodeType":"151","messageId":"152","endLine":80,"endColumn":31},{"ruleId":"149","severity":1,"message":"189","line":106,"column":9,"nodeType":"151","messageId":"152","endLine":106,"endColumn":16},{"ruleId":"149","severity":1,"message":"190","line":111,"column":9,"nodeType":"151","messageId":"152","endLine":111,"endColumn":17},{"ruleId":"149","severity":1,"message":"191","line":117,"column":10,"nodeType":"151","messageId":"152","endLine":117,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":166,"column":31,"nodeType":"194","messageId":"195","endLine":166,"endColumn":33},{"ruleId":"149","severity":1,"message":"196","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"197","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":18},{"ruleId":"149","severity":1,"message":"198","line":10,"column":8,"nodeType":"151","messageId":"152","endLine":10,"endColumn":29},{"ruleId":"149","severity":1,"message":"184","line":13,"column":8,"nodeType":"151","messageId":"152","endLine":13,"endColumn":18},{"ruleId":"149","severity":1,"message":"199","line":16,"column":8,"nodeType":"151","messageId":"152","endLine":16,"endColumn":15},{"ruleId":"149","severity":1,"message":"200","line":18,"column":10,"nodeType":"151","messageId":"152","endLine":18,"endColumn":14},{"ruleId":"149","severity":1,"message":"201","line":18,"column":16,"nodeType":"151","messageId":"152","endLine":18,"endColumn":20},{"ruleId":"149","severity":1,"message":"202","line":18,"column":22,"nodeType":"151","messageId":"152","endLine":18,"endColumn":27},{"ruleId":"149","severity":1,"message":"203","line":18,"column":29,"nodeType":"151","messageId":"152","endLine":18,"endColumn":36},{"ruleId":"149","severity":1,"message":"204","line":18,"column":38,"nodeType":"151","messageId":"152","endLine":18,"endColumn":42},{"ruleId":"149","severity":1,"message":"178","line":22,"column":8,"nodeType":"151","messageId":"152","endLine":22,"endColumn":23},{"ruleId":"205","severity":1,"message":"206","line":98,"column":39,"nodeType":"194","messageId":"207","endLine":98,"endColumn":40},{"ruleId":"149","severity":1,"message":"208","line":1,"column":26,"nodeType":"151","messageId":"152","endLine":1,"endColumn":35},{"ruleId":"149","severity":1,"message":"178","line":20,"column":8,"nodeType":"151","messageId":"152","endLine":20,"endColumn":23},{"ruleId":"149","severity":1,"message":"209","line":89,"column":13,"nodeType":"151","messageId":"152","endLine":89,"endColumn":24},{"ruleId":"149","severity":1,"message":"210","line":94,"column":12,"nodeType":"151","messageId":"152","endLine":94,"endColumn":18},{"ruleId":"149","severity":1,"message":"211","line":130,"column":25,"nodeType":"151","messageId":"152","endLine":130,"endColumn":32},{"ruleId":"149","severity":1,"message":"208","line":1,"column":26,"nodeType":"151","messageId":"152","endLine":1,"endColumn":35},{"ruleId":"149","severity":1,"message":"177","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":17},{"ruleId":"149","severity":1,"message":"212","line":10,"column":8,"nodeType":"151","messageId":"152","endLine":10,"endColumn":16},{"ruleId":"149","severity":1,"message":"213","line":11,"column":8,"nodeType":"151","messageId":"152","endLine":11,"endColumn":18},{"ruleId":"149","severity":1,"message":"214","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":31},{"ruleId":"149","severity":1,"message":"215","line":15,"column":8,"nodeType":"151","messageId":"152","endLine":15,"endColumn":13},{"ruleId":"149","severity":1,"message":"216","line":18,"column":18,"nodeType":"151","messageId":"152","endLine":18,"endColumn":25},{"ruleId":"149","severity":1,"message":"217","line":18,"column":27,"nodeType":"151","messageId":"152","endLine":18,"endColumn":32},{"ruleId":"149","severity":1,"message":"178","line":20,"column":8,"nodeType":"151","messageId":"152","endLine":20,"endColumn":23},{"ruleId":"149","severity":1,"message":"218","line":62,"column":10,"nodeType":"151","messageId":"152","endLine":62,"endColumn":17},{"ruleId":"149","severity":1,"message":"209","line":67,"column":13,"nodeType":"151","messageId":"152","endLine":67,"endColumn":24},{"ruleId":"149","severity":1,"message":"186","line":71,"column":11,"nodeType":"151","messageId":"152","endLine":71,"endColumn":18},{"ruleId":"149","severity":1,"message":"210","line":72,"column":12,"nodeType":"151","messageId":"152","endLine":72,"endColumn":18},{"ruleId":"149","severity":1,"message":"219","line":72,"column":20,"nodeType":"151","messageId":"152","endLine":72,"endColumn":29},{"ruleId":"149","severity":1,"message":"220","line":73,"column":12,"nodeType":"151","messageId":"152","endLine":73,"endColumn":27},{"ruleId":"149","severity":1,"message":"221","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":25},{"ruleId":"149","severity":1,"message":"222","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":12},{"ruleId":"149","severity":1,"message":"223","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":13},{"ruleId":"149","severity":1,"message":"224","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":14},{"ruleId":"149","severity":1,"message":"225","line":9,"column":8,"nodeType":"151","messageId":"152","endLine":9,"endColumn":16},{"ruleId":"149","severity":1,"message":"226","line":10,"column":8,"nodeType":"151","messageId":"152","endLine":10,"endColumn":16},{"ruleId":"149","severity":1,"message":"227","line":12,"column":8,"nodeType":"151","messageId":"152","endLine":12,"endColumn":20},{"ruleId":"149","severity":1,"message":"228","line":13,"column":8,"nodeType":"151","messageId":"152","endLine":13,"endColumn":20},{"ruleId":"149","severity":1,"message":"229","line":16,"column":9,"nodeType":"151","messageId":"152","endLine":16,"endColumn":14},{"ruleId":"149","severity":1,"message":"230","line":30,"column":27,"nodeType":"151","messageId":"152","endLine":30,"endColumn":43},{"ruleId":"149","severity":1,"message":"231","line":36,"column":11,"nodeType":"151","messageId":"152","endLine":36,"endColumn":30},{"ruleId":"149","severity":1,"message":"232","line":44,"column":11,"nodeType":"151","messageId":"152","endLine":44,"endColumn":22},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["233"],"no-negated-in-lhs",["234"],"'makeStyles' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'Link' is defined but never used.","'VisibilityIcon' is defined but never used.","'Tooltip' is defined but never used.","'IconButton' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"235","text":"236"},"'FaUserPlus' is defined but never used.","'prescriptions' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'drugType' is assigned a value but never used.","'TiArrowBack' is defined but never used.","'MatButton' is defined but never used.","'momentLocalizer' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Breadcrumbs' is defined but never used.","'Typography' is defined but never used.","'prescriptionOrder' is assigned a value but never used.","'classes' is assigned a value but never used.","'toggleModal2' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'toggle2' is assigned a value but never used.","'closeBtn' is assigned a value but never used.","'closeBtn1' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'classNames' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'Divider' is defined but never used.","'Grid' is defined but never used.","'Step' is defined but never used.","'Label' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useEffect' is defined but never used.","'buttonLabel' is assigned a value but never used.","'saving' is assigned a value but never used.","'newData' is assigned a value but never used.","'SaveIcon' is defined but never used.","'CancelIcon' is defined but never used.","'toast' is defined but never used.","'axios' is defined but never used.","'baseUrl' is defined but never used.","'token' is defined but never used.","'history' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'drugDispenseObj' is assigned a value but never used.","'ClickAwayListener' is defined but never used.","'Grow' is defined but never used.","'Paper' is defined but never used.","'Popper' is defined but never used.","'MenuItem' is defined but never used.","'MenuList' is defined but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'FaEye' is defined but never used.","'setSelectedIndex' is assigned a value but never used.","'handleMenuItemClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[352,366],"token"]