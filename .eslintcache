[{"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\index.js":"1","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\App.js":"2","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\context\\ThemeContext.js":"3","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\reportWebVitals.js":"4","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\PatientMediationHistory.js":"7","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\Index.js":"8","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PrescriptionList.js":"9","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\DrugPrecription.js":"10","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\MedicationObj.js":"11","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\RegimenPrescription.js":"12","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PatientPrescriptions.js":"13","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"14","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PrescriptionObj.js":"15","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\api.js":"16","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\DispenseModal.js":"17","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\RecentActivities.js":"18","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\DispenseDrug.js":"19"},{"size":754,"mtime":1652451945238,"results":"20","hashOfConfig":"21"},{"size":1164,"mtime":1652437115837,"results":"22","hashOfConfig":"21"},{"size":9235,"mtime":1652437115846,"results":"23","hashOfConfig":"21"},{"size":375,"mtime":1652437117765,"results":"24","hashOfConfig":"21"},{"size":3056,"mtime":1652437115847,"results":"25","hashOfConfig":"21"},{"size":1226,"mtime":1652451945253,"results":"26","hashOfConfig":"21"},{"size":4732,"mtime":1652467302850,"results":"27","hashOfConfig":"21"},{"size":1802,"mtime":1652451945257,"results":"28","hashOfConfig":"21"},{"size":6211,"mtime":1652451945259,"results":"29","hashOfConfig":"21"},{"size":18123,"mtime":1652510914516,"results":"30","hashOfConfig":"21"},{"size":13246,"mtime":1652437117753,"results":"31","hashOfConfig":"21"},{"size":19796,"mtime":1652511229642,"results":"32","hashOfConfig":"21"},{"size":8227,"mtime":1652512143924,"results":"33","hashOfConfig":"21"},{"size":7164,"mtime":1652452310853,"results":"34","hashOfConfig":"21"},{"size":91504,"mtime":1652437117762,"results":"35","hashOfConfig":"21"},{"size":416,"mtime":1652506976753,"results":"36","hashOfConfig":"21"},{"size":12953,"mtime":1652437117759,"results":"37","hashOfConfig":"21"},{"size":17508,"mtime":1652451945255,"results":"38","hashOfConfig":"21"},{"size":11728,"mtime":1652513913510,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1mkjyct",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\index.js",["92"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\";  \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["93","94"],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\App.js",["95"],"import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport Prescription from './main/webapp/jsx/components/Prescriptions/Index'\r\nimport PatientMediationHistory from './main/webapp/jsx/components/Medication/PatientMediationHistory'\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n          <Route path=\"/prescriptions\">\r\n            <Prescription />\r\n          </Route>\r\n          <Route path=\"/medication\">\r\n            <PatientMediationHistory />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Home.js",["96"],"import React, {useState, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PrescriptionList from './Prescriptions/PrescriptionList'\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n     \r\n      <Row>\r\n       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                    >\r\n                   \r\n                    <Tab eventKey=\"home\" title=\"Prescriptions\">                   \r\n                      <PrescriptionList />\r\n                    </Tab>\r\n                    \r\n                    </Tabs>\r\n\r\n\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\PatientMediationHistory.js",["97","98","99","100","101","102"],"import React, {useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport { Link } from 'react-router-dom'\r\n//import Remove from '@material-ui/icons/Remove';\r\nimport { FaPlus } from \"react-icons/fa\";\r\n// import axios from \"axios\";\r\n// import { url as baseUrl , PHARMACYSERVICECODE} from \"../../api\";\r\nimport {medicationObj} from './MedicationObj';\r\nimport { Badge } from 'reactstrap';\r\nimport { Card, Row, Col,} from \"react-bootstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DrugRegimenOrder from './DrugPrecription'\r\nimport RegimenPrescription from './RegimenPrescription'\r\nimport RecentActivities  from './RecentActivities';\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst divStyle = {\r\n    borderRadius: \"2px\",\r\n    fontSize: 14,\r\n  };\r\n\r\nconst DRUG_ORDER_STATUS = [{name:\"Not Dispensed\", id: 0},\r\n{name:\"Dispensed\", id: 1}];\r\n\r\nconst PatientSearch = (props) => {\r\n    const prescriptions = medicationObj\r\n    const [modal, setModal] = useState(false);\r\n    const toggleModal = () => setModal(!modal);\r\n    const [modalRegimen, setModalRegimen] = useState(false);\r\n    const toggleModalRegimen = () => setModalRegimen(!modalRegimen) \r\n\r\n    const DisplayDrugOrderModal = ()=>{\r\n        //console.log(modal)\r\n        setModal(!modal);\r\n        //console.log(modal)\r\n    }\r\n    const DisplayRegimenModal = ()=>{\r\n        //console.log(modal)\r\n        setModalRegimen(!modalRegimen);\r\n        //console.log(modal)\r\n    }\r\n\r\n  return (\r\n\r\n    <div>\r\n    <Row>\r\n\r\n    <Col xl={12}>\r\n    <Card style={divStyle}>\r\n\r\n    <Card.Body>\r\n    <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaPlus size=\"10\"/>}\r\n                onClick={()=>DisplayRegimenModal()}\r\n\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Regimen Prescription</span>\r\n        </Button>\r\n        <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaPlus size=\"10\"/>}\r\n                onClick={()=>DisplayDrugOrderModal()}\r\n\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Drug Prescription</span>\r\n        </Button>\r\n        \r\n            <br/><br/>\r\n        <RecentActivities />\r\n      </Card.Body>\r\n      </Card>\r\n      </Col>\r\n      </Row>\r\n      <DrugRegimenOrder modalstatus={modal} togglestatus={toggleModal}/>\r\n      <RegimenPrescription modalstatus={modalRegimen} togglestatus={toggleModalRegimen} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientSearch;\r\n\r\n\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\Index.js",["103","104"],"import React,{useState} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './../Patient/PatientCard';\r\nimport PatientPrescriptions from './PatientPrescriptions';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [key, setKey] = useState('home');\r\n    const { classes } = props;\r\n\r\n    const patientObj = history.location && history.location.state ? history.location.state : {}\r\n    console.log(patientObj)\r\n  return (\r\n    <div className={classes.root}>\r\n        \r\n        <Card >\r\n        <CardContent>\r\n        <PatientCardDetail patientObj={patientObj}/>\r\n        <br/>\r\n           \r\n        <PatientPrescriptions  patientObj={patientObj}/> \r\n           \r\n            \r\n           \r\n          \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PrescriptionList.js",["105","106","107","108","109"],"import React, {useEffect, useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n import axios from \"axios\";\r\nimport { url as baseUrl, token as token  } from \"../../../api\";\r\nimport {PrescriptionObj} from './PrescriptionObj';\r\n\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst PatientSearch = (props) => {\r\n  const prescriptions = PrescriptionObj;\r\n  const [prescriptionList, setPrescriptionList] = useState([])\r\n    useEffect(() => {\r\n        Prescribtions();\r\n    }, []);\r\n    \r\n    ///GET LIST OF Drug Prescriptions\r\n    async function Prescribtions() {\r\n        axios\r\n            .get(`${baseUrl}drug-orders/patients`,{ headers: {\"Authorization\" : `Bearer ${token}`} })\r\n            .then((response) => {\r\n                setPrescriptionList(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    //Get total drug dispensed \r\n    const totalDrugsPrescribed = (drugsArray) => {\r\n      const dispensed = []\r\n        drugsArray.map(drugs => {\r\n            if (drugs.status === 1)\r\n              dispensed.push(drugs)\r\n        })\r\n    return dispensed.length\r\n  }\r\n  const drugType = (drugsArray) => {\r\n    //console.log(prescriptions)\r\n    const type = []\r\n    drugsArray.map(drugs => {\r\n        if (drugs.data.type === 1){\r\n          type.push('Drug')\r\n        }else if(drugs.data.type === 0){\r\n          type.push('Regimen')\r\n        }else{\r\n          type.push('')\r\n        }\r\n       \r\n    })\r\n    \r\n    return type\r\n  }\r\n \r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n       icons={tableIcons}\r\n        title=\"Drug Prescriptions\"\r\n        columns={[\r\n          { title: \"Patient ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Prescription Date\", field: \"date\", type: \"date\", filtering: false, },\r\n          {\r\n            title: \"Total Prescribed\",\r\n            field: \"prescribedCount\",\r\n            filtering: false,\r\n          },\r\n          {\r\n            title: \"Total Dispensed\",\r\n            field: \"dispensedCount\",\r\n            filtering: false,\r\n          },\r\n          {\r\n            title: \"Action\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n          },\r\n        ]}\r\n        data={ prescriptionList.map((prescription) => ({\r\n          Id: prescription.patientHospitalNumber,\r\n          name: prescription.patientFirstName + \" \" + prescription.patientLastName,\r\n          date: prescription.patientDob,\r\n          prescribedCount: prescription.drugOrders.length,\r\n          dispensedCount: totalDrugsPrescribed(prescription.drugOrders),\r\n         // type:   drugType(prescription.formDataObj),\r\n          actions: (\r\n            \r\n            <Link\r\n              to={{\r\n                pathname: \"/prescriptions\",\r\n                state: prescription,\r\n               \r\n              }}\r\n              style={{ cursor: \"pointer\", color: \"blue\", fontStyle: \"bold\" }}>\r\n              <Tooltip title=\"View Prescription\">\r\n                <IconButton aria-label=\"View Prescription\">\r\n                  <VisibilityIcon color=\"primary\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Link>\r\n          ),\r\n        }))}\r\n        \r\n                  options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#9F9FA5\",\r\n                        color: \"#000\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '300%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientSearch;\r\n\r\n\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\DrugPrecription.js",["110","111","112","113","114","115","116","117"],"import React, {useState, useEffect} from 'react';\r\n\r\nimport {CardBody,InputGroup, Form,Input,Label,Card,ModalHeader,CardHeader,Modal, ModalBody,FormGroup} from 'reactstrap'\r\n\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from \"moment\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport { url  as baseUrl, token} from \"../../../api\";\r\nimport axios from \"axios\";\r\n//import { CardHeader } from 'material-ui';\r\n\r\n\r\n\r\nMoment.locale('en');\r\nmomentLocalizer();\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\nconst DispenseModal = (props) => {\r\n    const { buttonLabel, className } = props;\r\n    const [errors, setErrors] = useState({});\r\n    const toggle = props.togglestatus\r\n    const modal = props.modalstatus\r\n    const [loading, setLoading] = useState(false)\r\n    const closeBtn = props.close\r\n    const [saving, setSaving] = useState(false);\r\n    const classes = useStyles();\r\n    const [drugs, setDrugs] = useState([])\r\n    const [dosageUnit, setDosageUnit] = useState([])\r\n    const [objValues, setObjValues] = useState({brand: \"\",\r\n                                                    comments: \"string\",\r\n                                                    dateTimeDispensed: \"yyyy-MM-dd@HH:mm:ss\",\r\n                                                    dateTimePrescribed: \"yyyy-MM-dd@HH:mm:ss\",\r\n                                                    dosageFrequency: 0,\r\n                                                    dosageStrengthUnit: \"\",\r\n                                                    drugName: \"\",\r\n                                                    duration: \"\",\r\n                                                    durationUnit: \"\",\r\n                                                    encounterDateTime: \"yyyy-MM-dd@HH:mm:ss\",\r\n                                                    orderedBy: \"\",\r\n                                                    otherDetails: {},\r\n                                                    patientId: 0,\r\n                                                    startDate: \"yyyy-MM-dd\",\r\n                                                    status: 0,\r\n                                                    type: \"\"\r\n                                                });\r\n\r\n    const handleInputChange = (e) => {\r\n        setObjValues ({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    useEffect(() => {\r\n        DrugList();\r\n        DosageUnit();\r\n      }, []);\r\n   //Get list of Regimens\r\n   const DrugList =()=>{\r\n    axios\r\n       .get(`${baseUrl}drugs`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n        setDrugs(response.data);\r\n       })\r\n       .catch((error) => {\r\n       });\r\n   \r\n    }\r\n    // Dosage Strength Unit\r\n    const DosageUnit =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setDosageUnit(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n\r\n\r\n    const handleDispense = (e) => {\r\n        e.preventDefault()\r\n        // const date_dispensed = moment(formValues.dateDispensed).format(\r\n        //     \"DD-MM-YYYY\"\r\n        // );\r\n        // formData.data.brand_name_dispensed = formValues.brandName\r\n        // formData.data.quantity_dispensed = formValues.qtyDispensed\r\n        // formData.data.prescription_status = 1\r\n        // formData.data.date_dispensed = date_dispensed\r\n        // formData.data.comment = formValues.comment\r\n        // const data = { ...formData };\r\n\r\n        toggle()\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Modal\r\n                        isOpen={modal}\r\n                        toggle={toggle}\r\n                        className={className}\r\n                        size=\"xl\"\r\n                    >\r\n                        <ModalHeader toggle={toggle} close={closeBtn}>\r\n                            DRUG PRESCRIPTION\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group  col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"artDate\">Encounter Date * </Label>\r\n                                        <Input\r\n                                            type=\"datetime-local\"\r\n                                            name=\"visitDate\"\r\n                                            id=\"visitDate\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.visitDate}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group  col-md-4\"></div>\r\n                              \r\n                                    <div className=\"form-group col-md-4\"></div>\r\n                                    <Card>\r\n                                    <CardBody>\r\n                                    <h4>Enter Drugs Information </h4>\r\n                                    <div className=\"row\">\r\n                                    <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >Select Drug </Label>\r\n                                    <Input\r\n                                            type=\"select\"\r\n                                            name=\"drugName\"\r\n                                            id=\"drugName\"\r\n                                            value={objValues.drugName}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\"> </option>\r\n                      \r\n                                            {drugs.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                    <Label >\tDosage Strength</Label>\r\n                                    <Input\r\n                                            type=\"number\"\r\n                                            name=\"dosageStrengthUnit\"\r\n                                            id=\"tbStatusId\"\r\n                                            value={objValues.tbStatusId}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            \r\n                                        </Input>\r\n                                    {errors.dosageStrengthUnit !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dosageStrengthUnit}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group  col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label >Dosage Unit *</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"dosageStrengthUnit\"\r\n                                            id=\"dosageStrengthUnit\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dosageStrengthUnit}\r\n                                            required\r\n                                        >\r\n                                             <option value=\"\"> </option>\r\n                      \r\n                                                {dosageUnit.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                           \r\n                                            {errors.dosageStrengthUnit !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dosageStrengthUnit}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </div>\r\n                                    </CardBody>\r\n                                    </Card>\r\n                                    <br/>\r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Drug Brand Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"brand\"\r\n                                            id=\"brand\"\r\n                                            value={objValues.brand}\r\n                                            onChange={handleInputChange}\r\n                                            ></Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Dose Frequency</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"dosageFrequency\"\r\n                                            id=\"dosageFrequency\"\r\n                                            value={objValues.dosageFrequency}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            \r\n                                        </Input>\r\n                                        {errors.dosageFrequency !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dosageFrequency}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Start Date </Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"startDate\"\r\n                                            id=\"startDate\"\r\n                                            value={objValues.startDate}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             \r\n                                        </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Duration </Label>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"duration\"\r\n                                            id=\"duration\"\r\n                                            value={objValues.duration}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                          \r\n                                        </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Duration Unit </Label>\r\n                                        <InputGroup> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"durationUnit\"\r\n                                                id=\"durationUnit\"\r\n                                                onChange={handleInputChange}\r\n                                                value={objValues.bodyWeight} \r\n                                            />\r\n                                           \r\n                                            \r\n                                        </InputGroup>\r\n                                        {objValues.bodyWeight > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Clinical Notes</Label>\r\n                                        <Input\r\n                                            type=\"textarea\"\r\n                                            name=\"comments\"\r\n                                            rows=\"40\" cols=\"50\"\r\n                                            id=\"comments\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.comments}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleDispense}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DispenseModal;\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\MedicationObj.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\RegimenPrescription.js",["118","119","120","121","122","123","124","125","126"],"import React, {useState, useEffect} from 'react';\r\n\r\nimport {CardBody,InputGroup, Form,Input,Label,Card,ModalHeader,CardHeader,Modal, ModalBody,FormGroup} from 'reactstrap'\r\n\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from \"moment\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport axios from \"axios\";\r\n//import { CardHeader } from 'material-ui';\r\n\r\n\r\n\r\nMoment.locale('en');\r\nmomentLocalizer();\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\nconst DispenseModal = (props) => {\r\n    const { buttonLabel, className } = props;\r\n    const [errors, setErrors] = useState({});\r\n    const toggle = props.togglestatus\r\n    const modal = props.modalstatus\r\n    const [loading, setLoading] = useState(false)\r\n    const closeBtn = props.close\r\n    const [saving, setSaving] = useState(false);\r\n    const classes = useStyles();\r\n    const [regimens, setRegimens] = useState([])\r\n    const [regimenDrugs, setRegimenDrug] = useState([])\r\n    const [dosageUnit, setDosageUnit] = useState([])\r\n    const [objValues, setObjValues] = useState({brand: \"\",\r\n                                                    comments: \"string\",\r\n                                                    dateTimeDispensed: \"yyyy-MM-dd@HH:mm:ss\",\r\n                                                    dateTimePrescribed: \"yyyy-MM-dd@HH:mm:ss\",\r\n                                                    dosageFrequency: 0,\r\n                                                    dosageStrengthUnit: \"\",\r\n                                                    drugName: \"\",\r\n                                                    duration: \"\",\r\n                                                    durationUnit: \"\",\r\n                                                    encounterDateTime: \"yyyy-MM-dd@HH:mm:ss\",\r\n                                                    orderedBy: \"\",\r\n                                                    otherDetails: {},\r\n                                                    patientId: 0,\r\n                                                    startDate: \"yyyy-MM-dd\",\r\n                                                    status: 0,\r\n                                                    type: \"\"\r\n                                                });\r\n\r\n    const handleInputChange = (e) => {\r\n        setObjValues ({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    useEffect(() => {\r\n        RegimenList();\r\n        DosageUnit();\r\n      }, []);\r\n   //Get list of Regimens\r\n   const RegimenList =()=>{\r\n    axios\r\n       .get(`${baseUrl}regimens`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n           setRegimens(response.data);\r\n       })\r\n       .catch((error) => {\r\n       });\r\n   \r\n    }\r\n    //Get list of selected Regimen\r\n    const handleSelectedRegimen = (e)=> {\r\n        const id = e.target.value\r\n        async function getRegimenLine() {\r\n            const response = await axios.get(`${baseUrl}drugs/regimen/`+id,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            ).then((response) => {\r\n                setRegimenDrug(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n           \r\n      }\r\n      getRegimenLine();\r\n  \r\n    }\r\n    // Dosage Strength Unit\r\n    const DosageUnit =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setDosageUnit(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n     }\r\n\r\n    const handleDispense = (e) => {\r\n        e.preventDefault()\r\n        // const date_dispensed = moment(formValues.dateDispensed).format(\r\n        //     \"DD-MM-YYYY\"\r\n        // );\r\n        // formData.data.brand_name_dispensed = formValues.brandName\r\n        // formData.data.quantity_dispensed = formValues.qtyDispensed\r\n        // formData.data.prescription_status = 1\r\n        // formData.data.date_dispensed = date_dispensed\r\n        // formData.data.comment = formValues.comment\r\n        // const data = { ...formData };\r\n\r\n        toggle()\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Modal\r\n                        isOpen={modal}\r\n                        toggle={toggle}\r\n                        className={className}\r\n                        size=\"xl\"\r\n                    >\r\n                        <ModalHeader toggle={toggle} close={closeBtn}>\r\n                            DRUG PRESCRIPTION\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                        <Label for=\"artDate\">Encounter Date * </Label>\r\n                                        <Input\r\n                                            type=\"datetime-local\"\r\n                                            name=\"visitDate\"\r\n                                            id=\"visitDate\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.visitDate}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\"></div>\r\n                              \r\n                                    <div className=\"form-group mb-3 col-md-4\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Select Regimen *</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"drugName\"\r\n                                            id=\"drugName\"\r\n                                            value={objValues.drugName}\r\n                                            onChange={handleSelectedRegimen}\r\n                                            \r\n                                            >\r\n                                            <option value=\"\"> </option>\r\n                      \r\n                                                {regimens.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    {regimenDrugs.length >0 ? \r\n                                        (\r\n                                            <>\r\n                                                <Card>\r\n                                                <CardBody>\r\n                                                <h4>Enter Drugs Information </h4>\r\n                                                <div className=\"row\">\r\n                                                {regimenDrugs.map((drugsInfo) => (\r\n                                                    <>\r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                <Label >Drug </Label>\r\n                                                <Input\r\n                                                        type=\"text\"\r\n                                                        name=\"drugName\"\r\n                                                        id=\"drugName\"\r\n                                                        value={drugsInfo.name}\r\n                                                        onChange={handleInputChange}\r\n                                                        required\r\n                                                        ></Input>\r\n                                                </FormGroup>\r\n                                                </div>\r\n                                                \r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                <Label >\tDosage Strength</Label>\r\n                                                <Input\r\n                                                        type=\"number\"\r\n                                                        name=\"dosageStrengthUnit\"\r\n                                                        id=\"dosageStrengthUnit\"\r\n                                                        value={objValues.dosageStrengthUnit}\r\n                                                        onChange={handleInputChange}\r\n                                                        required\r\n                                                        >\r\n                                                        \r\n                                                    </Input>\r\n                                                \r\n                                                </FormGroup>\r\n                                                </div>\r\n                                            \r\n                                                <div className=\"form-group mb-3 col-md-4\">\r\n                                                    <FormGroup>\r\n                                                    <Label >Dosage Unit *</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"dosageStrengthUnitRegimen\"\r\n                                                        id=\"dosageStrengthUnitRegimen\"\r\n                                                        //onChange={handleInputChange}\r\n                                                        //value={objValues.dosageStrengthUnitRegimen}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\"> </option>\r\n                                \r\n                                                            {dosageUnit.map((value) => (\r\n                                                                <option key={value.id} value={value.id}>\r\n                                                                    {value.display}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                    </Input>\r\n                                                    \r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                </>\r\n                                                ))\r\n                                                }\r\n                                                </div>\r\n                                                </CardBody>\r\n                                                </Card>\r\n                                                <br/>\r\n                                            </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Dose Frequency</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"dosageFrequency\"\r\n                                            id=\"dosageFrequency\"\r\n                                            value={objValues.dosageFrequency}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            \r\n                                        </Input>\r\n                                        {errors.dosageFrequency !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dosageFrequency}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Start Date </Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"startDate\"\r\n                                            id=\"startDate\"\r\n                                            value={objValues.startDate}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                             \r\n                                        </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Duration </Label>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"duration\"\r\n                                            id=\"duration\"\r\n                                            value={objValues.duration}\r\n                                            onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                          \r\n                                        </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Duration Unit </Label>\r\n                                        <InputGroup> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"durationUnit\"\r\n                                                id=\"durationUnit\"\r\n                                                onChange={handleInputChange}\r\n                                                value={objValues.bodyWeight} \r\n                                            />\r\n                                           \r\n                                            \r\n                                        </InputGroup>\r\n                                        {objValues.bodyWeight > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Clinical Notes</Label>\r\n                                        <Input\r\n                                            type=\"textarea\"\r\n                                            name=\"comments\"\r\n                                            rows=\"40\" cols=\"50\"\r\n                                            id=\"comments\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.comments}\r\n                                            required\r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleDispense}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DispenseModal;\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PatientPrescriptions.js",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"import React, { useState, Fragment} from \"react\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { Table } from 'reactstrap'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport Moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DispenseModal from './DispenseDrug'\r\n// import DispenseModal from './DrugDispenseFormIo';\r\n// import DispenseModalUpdate from './DrugDispenseUpdateFormIo';\r\n// import ViewModal from './ViewModalForm';\r\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Spinner } from 'reactstrap';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst Prescriptions = (props) => {\r\n\r\n const prescriptionOrder  = props  && props.patientObj  ? props.patientObj : {}\r\n   \r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState('')\r\n  const [modal, setModal] = useState(false);\r\n  const toggleModal = () => setModal(!modal)\r\n  const [modal1, setModal1] = useState(false);\r\n  const toggleModal1 = () => setModal1(!modal1)\r\n  const [modal2, setModal2] = useState(false);\r\n  const toggleModal2 = () => setModal2(!modal2)\r\n  const [formData, setFormData] = useState(prescriptionOrder);\r\n  const [drugDetails, setDrugDetails] = useState()\r\n  console.log(formData)\r\nconst updateFormData = (data) =>{\r\n\r\n    // setLoading(true);\r\n    //   const index = formData.findIndex(x => x.drugOrders.id == drugOrders.id);\r\n\r\n    //   formData[index] = data;\r\n    //   setFormData(formData);\r\n    // setLoading(false);\r\n    }\r\n\r\n  const toggle = (form) => {\r\n    console.log(form)\r\n    setDrugDetails({ ...drugDetails, ...form });\r\n    setModal(!modal);\r\n    \r\n  } \r\n  const toggle1 = (form) => {\r\n    console.log(form)\r\n    setDrugDetails({ ...drugDetails, ...form });\r\n    setModal1(!modal1)\r\n  }\r\n\r\n  const toggle2 = (form) => {\r\n    console.log(form)\r\n    setDrugDetails({ ...drugDetails, ...form });\r\n    setModal2(!modal2)\r\n  }\r\n  const closeBtn = (\r\n    <button className=\"close\" onClick={toggle}>\r\n      &times;\r\n    </button>\r\n  );\r\n\r\n   const closeBtn1 = (\r\n     <button className=\"close\" onClick={toggle1}>\r\n       &times;\r\n     </button>\r\n   );\r\n\r\n\r\n const Actions = (form) => {\r\n  console.log(form) \r\n   return (\r\n     <Menu>\r\n       <MenuButton\r\n         style={{\r\n           backgroundColor: \"#3F51B5\",\r\n           color: \"#fff\",\r\n           border: \"2px solid #3F51B5\",\r\n           borderRadius: \"4px\",\r\n         }}\r\n       >\r\n         Action<span aria-hidden>▾</span>\r\n       </MenuButton>\r\n       <MenuList style={{ hover: \"#eee\" }}>\r\n         {form && form.status === 0 ? (\r\n\r\n           <MenuItem onSelect={() => \r\n            toggle(form)\r\n            }>\r\n             <i\r\n               className=\"fa fa-pencil\"\r\n               aria-hidden=\"true\"\r\n               size=\"15\"\r\n               style={{ cursor: \"pointer\", color: \"#000\" }}\r\n             >\r\n               &nbsp; {\"\"} Dispense drugs {}\r\n             </i>\r\n           </MenuItem>\r\n\r\n        \r\n         ) : (\r\n           <MenuItem onSelect={() => toggle(form)} >\r\n             <i\r\n               className=\"fa fa-pencil\"\r\n               aria-hidden=\"true\"\r\n               size=\"15\"\r\n               style={{ cursor: \"pointer\", color: \"#000\" }}\r\n             >\r\n               &nbsp; {\"\"} Update details\r\n             </i>\r\n           </MenuItem>\r\n         )}\r\n         {form && form.status !=0  ? (\r\n            <MenuItem onSelect={() => toggle1(form)}>\r\n              <i\r\n                className=\"fa fa-eye\"\r\n                aria-hidden=\"true\"\r\n                size=\"15\"\r\n                style={{ cursor: \"pointer\", color: \"#000\" }}\r\n              >\r\n                &nbsp; {\"\"}View details\r\n              </i>\r\n            </MenuItem>\r\n         )\r\n         :\r\n         \"\"\r\n      }\r\n       </MenuList>\r\n     </Menu>\r\n   );\r\n };\r\n  return (\r\n    <React.Fragment>\r\n        <Card body>\r\n        <Link to={\"/\"} >\r\n            <ButtonMui\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                //startIcon={<FaUserPlus size=\"10\"/>}\r\n\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n            </ButtonMui>\r\n            </Link>     \r\n          <div>\r\n            {formData.drugOrders.length >= 0 ? (\r\n              <Fragment>\r\n                   <h3>Drug Order Details</h3>\r\n                    <br />\r\n                    \r\n                            <Table striped responsive >\r\n                              <thead style={{backgroundColor: \"#9F9FA5\",color: \"#000\",}}>\r\n                                <tr>\r\n                                  <th>Name</th>\r\n                                  <th>Dosage</th>\r\n                                  <th>Duration</th>\r\n                                  <th>Date Prescribed</th>\r\n                                  <th>Date Dispensed</th>\r\n                                  <th></th>\r\n                                </tr>\r\n                              </thead>\r\n                              \r\n                              \r\n                                <tbody >\r\n                                {!loading  ?  formData.drugOrders.map((form) => (\r\n                                  \r\n                                  form !==null?\r\n                                  <tr key={form.id}>\r\n                                    <td>{form.drugName}</td>\r\n                                    <td>{form.dosageFrequency && form.dosageStrengthUnit ? form.dosageFrequency + ' ' + form.dosageStrengthUnit : '' }</td>\r\n                                    <td>{form.duration && form.duration ? form.duration + ' ' + form.durationUnit : ''}</td>\r\n                                    <td>{Moment(form.dateTimePrescribed).format(\"YYYY-MM-DD @ HH:mm:ss\")}</td>\r\n                                    <td>{ form.dateTimeDispensed ? Moment(form.dateTimeDispensed).format(\"YYYY-MM-DD @ HH:mm:ss\") : '' }</td>\r\n                                    <td>{Actions(form)}</td>\r\n                                  </tr>\r\n                                  :\r\n                                   <tr></tr>\r\n                                  ))\r\n                                  :<p> <Spinner color=\"primary\" /> Loading Please Wait</p>\r\n                                } \r\n                                </tbody>\r\n                               \r\n                            </Table>\r\n                            <br />\r\n                       \r\n              </Fragment>\r\n            ) : (\r\n              <div style={{height:'300px'}}>\r\n                <p>\r\n                  {\" \"}\r\n                  {/* <Spinner color=\"primary\" /> Loading Please Wait.. */}\r\n                  No Prescription details. Please try again...\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        \r\n     \r\n      {modal || modal1 ? \r\n      (\r\n        <>\r\n        <DispenseModal  modalstatus={modal} togglestatus={toggleModal} datasample={drugDetails} updateFormData={updateFormData}/>\r\n        {/*<ViewModal modalstatus={modal1} togglestatus={toggleModal1} datasample={drugDetails}/> */}\r\n       </>\r\n      ) \r\n      : \"\"\r\n      } \r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\n  \r\nexport default Prescriptions;\r\n\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["144","145","146","147","148","149"],"import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { Grid, Step, Label, Segment, Icon } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n    const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n        if (age_now === 0) {\r\n                return m + \" month(s)\";\r\n            }\r\n            return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel defaultExpanded>\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                <Row>\r\n                    \r\n                    <Col md={11}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\"}}>\r\n                        {patientObj.patientFirstName + \" \" + patientObj.patientLastName }\r\n                        </b>\r\n                        \r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b>{patientObj.patientId }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b>{patientObj.patientDob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b>{calculate_age(moment(patientObj.PatientDob).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                       <b>{patientObj.patientGender}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b>{patientObj.patientPhoneNumber }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b>{patientObj.patientAddress } </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                    \r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.details}>\r\n                <div className={classes.column} >\r\n                    <Button\r\n                            color='red'\r\n                            content='BloodType'\r\n                            //icon='heart'\r\n                            label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                            />\r\n                            \r\n                    </div>\r\n                <div className={classes.column}>\r\n                <Button\r\n                            basic\r\n                            color='blue'\r\n                            content='Height'\r\n                            icon='fork'\r\n                            label={{\r\n                                as: 'a',\r\n                                basic: true,\r\n                                color: 'blue',\r\n                                pointing: 'left',\r\n                                content: '74.5 in',\r\n                            }}\r\n                            />\r\n                </div>\r\n                <div className={classes.column}>\r\n                <Button\r\n                            basic\r\n                            color='blue'\r\n                            content='Weight'\r\n                            icon='fork'\r\n                            label={{\r\n                                as: 'a',\r\n                                basic: true,\r\n                                color: 'blue',\r\n                                pointing: 'left',\r\n                                content: '74.5 in',\r\n                            }}\r\n                            />\r\n                </div>\r\n                <div className={classNames(classes.column, classes.helper)}>\r\n                    <Typography variant=\"caption\">\r\n                   \r\n                    </Typography>\r\n                </div>\r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\PrescriptionObj.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\api.js",[],"C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\DispenseModal.js",["150","151","152","153","154"],"import React, {useState, useEffect} from 'react';\r\nimport {  Modal, ModalHeader, ModalBody,\r\n    Form,\r\n    Row,\r\n    Col,Input,\r\n    FormGroup,\r\n    Label,Card, CardBody\r\n} from 'reactstrap';\r\n\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { connect } from 'react-redux';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from 'react-widgets';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from \"moment\";\r\nimport { Spinner } from 'reactstrap';\r\nimport { url } from \"./../../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\nMoment.locale('en');\r\nmomentLocalizer();\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\nconst DispenseModal = (props) => {\r\n    const { buttonLabel, className } = props;\r\n    const toggle = props.togglestatus\r\n    const modal = props.modalstatus\r\n    const closeBtn = props.close\r\n    const classes = useStyles();\r\n    const [optionsample, setOptionsample] = useState([]);\r\n    const formData = props.formData ? props.formData : {}\r\n    const [formValues, setFormValues] = useState({})\r\n    console.log(props.formData)\r\n    const handleInputChange = (e) => {\r\n        setFormValues ({ ...formValues, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getCharacters() {\r\n            try {\r\n                const response = await axios(\r\n                    url + \"drugs\"\r\n                );\r\n                const body = response.data;\r\n                console.log(body)\r\n                setOptionsample(\r\n                    body.map(({ genericName, id }) => ({ title: genericName, value: id }))\r\n                );\r\n            } catch (error) {\r\n            }\r\n        }\r\n        getCharacters();\r\n    }, []);\r\n\r\n    const handleDispense = (e) => {\r\n        e.preventDefault()\r\n        const date_dispensed = moment(formValues.dateDispensed).format(\r\n            \"DD-MM-YYYY\"\r\n        );\r\n        formData.data.brand_name_dispensed = formValues.brandName\r\n        formData.data.quantity_dispensed = formValues.qtyDispensed\r\n        formData.data.prescription_status = 1\r\n        formData.data.date_dispensed = date_dispensed\r\n        formData.data.comment = formValues.comment\r\n        const data = { ...formData };\r\n        //props.updatePrescriptionStatus(formData.id, data);\r\n\r\n        toggle()\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <ToastContainer autoClose={3000} hideProgressBar />\r\n                    <Modal\r\n                        isOpen={modal}\r\n                        toggle={toggle}\r\n                        className={className}\r\n                        size=\"lg\"\r\n                    >\r\n                        <ModalHeader toggle={toggle} close={closeBtn}>\r\n                            Dispensing\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                            <Row>\r\n                                <div\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        backgroundColor: \"#9F9FA5\",\r\n                                        padding: \"1rem 1rem\",\r\n                                        marginBottom: \"1rem\",\r\n                                    }}\r\n                                >\r\n                                    Drug Prescribed:{\" \"}\r\n                                    <span>\r\n                                        {/* <b>{formData.data.generic_name}</b> */}\r\n                                    </span>\r\n                                    &nbsp;&nbsp; Quantity Prescribed:&nbsp;\r\n                                    <span>\r\n                                        <b>2 packs</b>\r\n                                    </span>\r\n                                    &nbsp;&nbsp; Stock Balance: &nbsp;\r\n                                    <span style={{ color: \"#19FF32\" }}>\r\n                                        <b>400 packs</b>\r\n                                    </span>\r\n                                </div>\r\n                            </Row>\r\n                            <Form onSubmit={handleDispense}>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <Label for=\"maritalStatus\">Date Dispensed</Label>\r\n                                            <DateTimePicker\r\n                                                time={false}\r\n                                                name=\"dateDispensed\"\r\n                                                value={formValues.dateDispensed}\r\n                                                onChange={dateValue => setFormValues({...formValues, dateDispensed: dateValue})}\r\n                                                id=\"date_sample_collected\"\r\n                                                defaultValue={new Date()}\r\n                                                max={new Date()}\r\n                                                required\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <br/>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleNumber\">Drug Name (Brand name)</Label>\r\n                                            {/* <Input\r\n                                                type=\"text\"\r\n                                                name=\"brandName\"\r\n                                                value={formValues.brandName}\r\n                                                id=\"drugDispensed\"\r\n                                                placeholder=\"brand name\"\r\n                                                onChange={handleInputChange}\r\n                                            /> */}\r\n\r\n                                            <Autocomplete\r\n                                                multiple=\"true\"\r\n                                                id=\"drugDispensed\"\r\n                                                size=\"small\"\r\n                                                options={optionsample}\r\n                                                //loading=\"true\"\r\n                                                //value={formValues.generic_name}\r\n                                                getOptionLabel={(option) => option.title}\r\n                                                //defaultValue={}\r\n                                                onChange={(e, i) => {\r\n                                                    setFormValues({ ...formValues, brandName: i });\r\n                                                }}\r\n                                                renderTags={(value, getTagProps) =>\r\n                                                    value.map((option, index) => (\r\n                                                        <Chip\r\n                                                            label={option.title}\r\n                                                            {...getTagProps({ index })}\r\n                                                            disabled={index === 0}\r\n                                                        />\r\n                                                    ))\r\n                                                }\r\n                                                style={{ width: \"auto\", marginTop: \"-1rem\" }}\r\n                                                s\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        margin=\"normal\"\r\n                                                    />\r\n                                                )}\r\n                                                required\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleNumber\">Quantity</Label>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                name=\"qtyDispensed\"\r\n                                                id=\"exampleNumber\"\r\n                                                onChange={handleInputChange}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Unit</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"unitDispensed\"\r\n                                                id=\"exampleSelect\"\r\n                                                onChange={handleInputChange}>\r\n                                                <option value=\"Packs\">Packs</option>\r\n                                                <option value=\"Tablets\">Tablets</option>\r\n                                                <option value=\"ml\">ml</option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"comment\">Note</Label>\r\n                                            <Input\r\n                                                type=\"textarea\"\r\n                                                name=\"comment\"\r\n                                                id=\"comment\"\r\n                                                onChange={handleInputChange}\r\n                                            ></Input>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    // disabled={loading}\r\n                                >\r\n                                    Ok\r\n                                </MatButton>\r\n\r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    onClick={toggle}\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}>\r\n                                    Cancel\r\n                                </MatButton>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DispenseModal;\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Medication\\RecentActivities.js",["155","156","157"],"import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\n\r\n// Page titie\r\n\r\n\r\nconst RecentActivities = () => {\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0 pb-0\">\r\n              <h4 className=\"card-title\">Drug Prescribed</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine\"\r\n                className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n              >\r\n                <ul className=\"timeline\">\r\n                  <li>\r\n                    <div className=\"timeline-badge primary\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge info\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge danger\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                       <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge success\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                       <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge warning\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                       <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge dark\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                       <span>10 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Sample Collected{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Assay{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                      <h6 className=\"mb-0\">\r\n                        Date Result Received{\" \"}<br/>\r\n                        <strong className=\"text-primary\">04 Nov, 2021</strong>.\r\n                      </h6>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-6 col-lg-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0 pb-0\">\r\n              <h4 className=\"card-title\">Drug Dispensed</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine1\"\r\n                className=\"widget-timeline dz-scroll style-1 height370 ps ps--active-y\"\r\n              >\r\n                <ul className=\"timeline\">\r\n                  <li>\r\n                    <div className=\"timeline-badge primary\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                     <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge info\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge danger\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge success\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge warning\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"timeline-badge dark\"></div>\r\n                    <Link\r\n                      className=\"timeline-panel text-muted\"\r\n                      to=\"/widget-basic\"\r\n                    >\r\n                      <span>20 Days ago</span>\r\n                      <h6 className=\"mb-0\">\r\n                      Current Regimen\r\n                        TDF(300mg)+3TC(300mg)+DTG(50mg){\" \"}\r\n                        <strong className=\"text-info\">Current Regimen Line<br/>\r\n                        ART First Line Adult</strong>\r\n                      </h6>\r\n                      <p className=\"mb-0\">\r\n                        Refill Date<br/>\r\n                        08 Jan, 2022\r\n                      </p>\r\n                      <strong className=\"text-warning\">\r\n                          Next Appointment<br/>\r\n                        05 Jul, 2022\r\n                     </strong><br/>\r\n                     <strong className=\"text-primary\">\r\n                        Refill Duration<br/>\r\n                        180\r\n                     </strong><br/>\r\n                     <strong className=\"text-teal\">\r\n                     Refill Duration<br/>\r\n                        180\r\n                     </strong>\r\n                     <strong className=\"mb-0\">\r\n                     IPT<br/>\r\n                    Isoniazid Preventive Therapy (IPT)\r\n                    </strong><br/>\r\n                    <strong className=\"mb-0\">\r\n                    IPT Date<b/>\r\n                    08 Jan, 2022\r\n                    </strong>\r\n                    \r\n\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n       \r\n        \r\n </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentActivities;\r\n","C:\\Users\\Mathew\\Documents\\PalladiumProject\\LamisPlus\\pharmacy\\src\\main\\webapp\\jsx\\components\\Prescriptions\\DispenseDrug.js",["158","159","160","161","162","163","164"],"import React, {useState, useEffect} from 'react';\r\nimport {  Modal, ModalHeader, ModalBody,\r\n    Col,Input,\r\n    FormGroup,\r\n    Label,Card, CardBody\r\n} from 'reactstrap';\r\n\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { url } from \"./../../../api\";\r\nimport axios from \"axios\";\r\nimport { Row,Alert, Button, Badge, Media } from \"react-bootstrap\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\nconst DispenseModal = (props) => {\r\n    const { buttonLabel, className } = props;\r\n    const toggle = props.togglestatus\r\n    const modal = props.modalstatus\r\n    const closeBtn = props.close\r\n    const classes = useStyles();\r\n    const [optionsample, setOptionsample] = useState([]);\r\n    const formData = props.formData ? props.formData : {}\r\n    const [formValues, setFormValues] = useState({})\r\n\r\n    const handleInputChange = (e) => {\r\n        setFormValues ({ ...formValues, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getCharacters() {\r\n            try {\r\n                const response = await axios(\r\n                    url + \"drugs\"\r\n                );\r\n                const body = response.data;\r\n                console.log(body)\r\n                setOptionsample(\r\n                    body.map(({ genericName, id }) => ({ title: genericName, value: id }))\r\n                );\r\n            } catch (error) {\r\n            }\r\n        }\r\n        getCharacters();\r\n    }, []);\r\n\r\n    const handleDispense = (e) => {\r\n        e.preventDefault()\r\n        // const date_dispensed = moment(formValues.dateDispensed).format(\r\n        //     \"DD-MM-YYYY\"\r\n        // );\r\n        // formData.data.brand_name_dispensed = formValues.brandName\r\n        // formData.data.quantity_dispensed = formValues.qtyDispensed\r\n        // formData.data.prescription_status = 1\r\n        // formData.data.date_dispensed = date_dispensed\r\n        // formData.data.comment = formValues.comment\r\n        // const data = { ...formData };\r\n        //props.updatePrescriptionStatus(formData.id, data);\r\n\r\n        toggle()\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <ToastContainer autoClose={3000} hideProgressBar />\r\n                    <Modal\r\n                        isOpen={modal}\r\n                        toggle={toggle}\r\n                        className={className}\r\n                        size=\"lg\"\r\n                    >\r\n                        <ModalHeader toggle={toggle} close={closeBtn}>\r\n                            Dispensing\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                            <Row>\r\n                                <div\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        backgroundColor: \"#9F9FA5\",\r\n                                        padding: \"1rem 1rem\",\r\n                                        marginBottom: \"1rem\",\r\n                                    }}\r\n                                >\r\n                                    Drug Prescribed:{\" \"}\r\n                                    <span>\r\n                                        {/* <b>{formData.data.generic_name}</b> */}\r\n                                    </span>\r\n                                    &nbsp;&nbsp; Quantity Prescribed:&nbsp;\r\n                                    <span>\r\n                                        <b>2 packs</b>\r\n                                    </span>\r\n                                    &nbsp;&nbsp; Stock Balance: &nbsp;\r\n                                    <span style={{ color: \"#19FF32\" }}>\r\n                                        <b>400 packs</b>\r\n                                    </span>\r\n                                </div>\r\n                            </Row>\r\n                            <Col lg={12}>\r\n                            \r\n                                <Row>\r\n                                    \r\n                                    <Col xl={12} >\r\n                                        <Alert\r\n                                        variant=\"outline-alert-outline-success\"\r\n                                        className=\"alert alert-primary notification\"\r\n                                        >\r\n                                        <p className=\"notificaiton-title mb-2\">\r\n                                            <strong>Success!</strong> Vampires The Romantic Ideology\r\n                                            Behind Them\r\n                                        </p>\r\n                                        <p>\r\n                                            The following article covers a topic that has recently\r\n                                            moved to center stage-at lease it seems that way.\r\n                                        </p>\r\n                                        \r\n                                        </Alert>\r\n                                    </Col>\r\n                                   \r\n                                </Row>\r\n                                \r\n                            </Col>\r\n                            <form>\r\n                            <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"maritalStatus\">Date Dispensed</Label>\r\n                                            \r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"dateDispensed\"\r\n                                                value={formValues.dateDispensed}\r\n                                                id=\"dateDispensed\"\r\n                                                placeholder=\"Date Dispensed\"\r\n                                                onChange={handleInputChange}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-5\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleNumber\">Drug Name (Brand name)</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"brandName\"\r\n                                                value={formValues.brandName}\r\n                                                id=\"drugDispensed\"\r\n                                                placeholder=\"brand name\"\r\n                                                onChange={handleInputChange}\r\n                                            />\r\n\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-3\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleNumber\">Quantity</Label>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                name=\"qtyDispensed\"\r\n                                                id=\"exampleNumber\"\r\n                                                onChange={handleInputChange}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Unit</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"unitDispensed\"\r\n                                                id=\"exampleSelect\"\r\n                                                onChange={handleInputChange}>\r\n                                                <option value=\"Packs\">Packs</option>\r\n                                                <option value=\"Tablets\">Tablets</option>\r\n                                                <option value=\"ml\">ml</option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"comment\">Note</Label>\r\n                                            <Input\r\n                                                type=\"textarea\"\r\n                                                name=\"comment\"\r\n                                                id=\"comment\"\r\n                                                row=\"40\"\r\n                                                onChange={handleInputChange}\r\n                                            ></Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleDispense}\r\n                                    // disabled={loading}\r\n                                >\r\n                                    Save\r\n                                </MatButton>\r\n\r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    onClick={toggle}\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}>\r\n                                    Cancel\r\n                                </MatButton>\r\n                            </form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DispenseModal;\r\n",{"ruleId":"165","severity":1,"message":"166","line":4,"column":41,"nodeType":"167","messageId":"168","endLine":4,"endColumn":47},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":19,"nodeType":"167","messageId":"168","endLine":3,"endColumn":25},{"ruleId":"165","severity":1,"message":"173","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":20},{"ruleId":"165","severity":1,"message":"174","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":21},{"ruleId":"165","severity":1,"message":"175","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":14},{"ruleId":"165","severity":1,"message":"176","line":10,"column":10,"nodeType":"167","messageId":"168","endLine":10,"endColumn":15},{"ruleId":"165","severity":1,"message":"177","line":35,"column":7,"nodeType":"167","messageId":"168","endLine":35,"endColumn":17},{"ruleId":"165","severity":1,"message":"178","line":60,"column":7,"nodeType":"167","messageId":"168","endLine":60,"endColumn":24},{"ruleId":"165","severity":1,"message":"179","line":64,"column":11,"nodeType":"167","messageId":"168","endLine":64,"endColumn":24},{"ruleId":"165","severity":1,"message":"180","line":51,"column":12,"nodeType":"167","messageId":"168","endLine":51,"endColumn":15},{"ruleId":"165","severity":1,"message":"181","line":51,"column":17,"nodeType":"167","messageId":"168","endLine":51,"endColumn":23},{"ruleId":"182","severity":1,"message":"183","line":9,"column":26,"nodeType":"184","messageId":"185","endLine":9,"endColumn":40,"fix":"186"},{"ruleId":"165","severity":1,"message":"179","line":52,"column":9,"nodeType":"167","messageId":"168","endLine":52,"endColumn":22},{"ruleId":"187","severity":1,"message":"188","line":71,"column":30,"nodeType":"189","messageId":"190","endLine":71,"endColumn":32},{"ruleId":"165","severity":1,"message":"191","line":77,"column":9,"nodeType":"167","messageId":"168","endLine":77,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":80,"column":26,"nodeType":"189","messageId":"190","endLine":80,"endColumn":28},{"ruleId":"165","severity":1,"message":"192","line":3,"column":30,"nodeType":"167","messageId":"168","endLine":3,"endColumn":34},{"ruleId":"165","severity":1,"message":"193","line":3,"column":64,"nodeType":"167","messageId":"168","endLine":3,"endColumn":74},{"ruleId":"165","severity":1,"message":"194","line":14,"column":8,"nodeType":"167","messageId":"168","endLine":14,"endColumn":14},{"ruleId":"165","severity":1,"message":"195","line":61,"column":13,"nodeType":"167","messageId":"168","endLine":61,"endColumn":24},{"ruleId":"165","severity":1,"message":"196","line":62,"column":20,"nodeType":"167","messageId":"168","endLine":62,"endColumn":29},{"ruleId":"165","severity":1,"message":"197","line":65,"column":12,"nodeType":"167","messageId":"168","endLine":65,"endColumn":19},{"ruleId":"165","severity":1,"message":"198","line":65,"column":21,"nodeType":"167","messageId":"168","endLine":65,"endColumn":31},{"ruleId":"165","severity":1,"message":"199","line":67,"column":20,"nodeType":"167","messageId":"168","endLine":67,"endColumn":29},{"ruleId":"165","severity":1,"message":"192","line":3,"column":30,"nodeType":"167","messageId":"168","endLine":3,"endColumn":34},{"ruleId":"165","severity":1,"message":"193","line":3,"column":64,"nodeType":"167","messageId":"168","endLine":3,"endColumn":74},{"ruleId":"165","severity":1,"message":"194","line":14,"column":8,"nodeType":"167","messageId":"168","endLine":14,"endColumn":14},{"ruleId":"165","severity":1,"message":"195","line":61,"column":13,"nodeType":"167","messageId":"168","endLine":61,"endColumn":24},{"ruleId":"165","severity":1,"message":"196","line":62,"column":20,"nodeType":"167","messageId":"168","endLine":62,"endColumn":29},{"ruleId":"165","severity":1,"message":"197","line":65,"column":12,"nodeType":"167","messageId":"168","endLine":65,"endColumn":19},{"ruleId":"165","severity":1,"message":"198","line":65,"column":21,"nodeType":"167","messageId":"168","endLine":65,"endColumn":31},{"ruleId":"165","severity":1,"message":"199","line":67,"column":20,"nodeType":"167","messageId":"168","endLine":67,"endColumn":29},{"ruleId":"165","severity":1,"message":"200","line":114,"column":19,"nodeType":"167","messageId":"168","endLine":114,"endColumn":27},{"ruleId":"165","severity":1,"message":"201","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":21},{"ruleId":"165","severity":1,"message":"202","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":17},{"ruleId":"165","severity":1,"message":"203","line":18,"column":3,"nodeType":"167","messageId":"168","endLine":18,"endColumn":11},{"ruleId":"165","severity":1,"message":"193","line":19,"column":3,"nodeType":"167","messageId":"168","endLine":19,"endColumn":13},{"ruleId":"165","severity":1,"message":"204","line":20,"column":3,"nodeType":"167","messageId":"168","endLine":20,"endColumn":6},{"ruleId":"165","severity":1,"message":"205","line":21,"column":3,"nodeType":"167","messageId":"168","endLine":21,"endColumn":6},{"ruleId":"165","severity":1,"message":"206","line":25,"column":8,"nodeType":"167","messageId":"168","endLine":25,"endColumn":19},{"ruleId":"165","severity":1,"message":"207","line":26,"column":8,"nodeType":"167","messageId":"168","endLine":26,"endColumn":18},{"ruleId":"165","severity":1,"message":"208","line":73,"column":9,"nodeType":"167","messageId":"168","endLine":73,"endColumn":16},{"ruleId":"165","severity":1,"message":"198","line":74,"column":19,"nodeType":"167","messageId":"168","endLine":74,"endColumn":29},{"ruleId":"165","severity":1,"message":"209","line":78,"column":9,"nodeType":"167","messageId":"168","endLine":78,"endColumn":21},{"ruleId":"165","severity":1,"message":"210","line":80,"column":9,"nodeType":"167","messageId":"168","endLine":80,"endColumn":21},{"ruleId":"165","severity":1,"message":"211","line":81,"column":20,"nodeType":"167","messageId":"168","endLine":81,"endColumn":31},{"ruleId":"165","severity":1,"message":"212","line":106,"column":9,"nodeType":"167","messageId":"168","endLine":106,"endColumn":16},{"ruleId":"165","severity":1,"message":"213","line":111,"column":9,"nodeType":"167","messageId":"168","endLine":111,"endColumn":17},{"ruleId":"165","severity":1,"message":"214","line":117,"column":10,"nodeType":"167","messageId":"168","endLine":117,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":167,"column":31,"nodeType":"217","messageId":"218","endLine":167,"endColumn":33},{"ruleId":"165","severity":1,"message":"219","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":24},{"ruleId":"165","severity":1,"message":"220","line":14,"column":10,"nodeType":"167","messageId":"168","endLine":14,"endColumn":14},{"ruleId":"165","severity":1,"message":"221","line":14,"column":16,"nodeType":"167","messageId":"168","endLine":14,"endColumn":20},{"ruleId":"165","severity":1,"message":"222","line":14,"column":22,"nodeType":"167","messageId":"168","endLine":14,"endColumn":27},{"ruleId":"165","severity":1,"message":"223","line":14,"column":29,"nodeType":"167","messageId":"168","endLine":14,"endColumn":36},{"ruleId":"165","severity":1,"message":"224","line":14,"column":38,"nodeType":"167","messageId":"168","endLine":14,"endColumn":42},{"ruleId":"165","severity":1,"message":"225","line":14,"column":10,"nodeType":"167","messageId":"168","endLine":14,"endColumn":17},{"ruleId":"165","severity":1,"message":"226","line":18,"column":26,"nodeType":"167","messageId":"168","endLine":18,"endColumn":31},{"ruleId":"165","severity":1,"message":"227","line":25,"column":10,"nodeType":"167","messageId":"168","endLine":25,"endColumn":17},{"ruleId":"165","severity":1,"message":"195","line":68,"column":13,"nodeType":"167","messageId":"168","endLine":68,"endColumn":24},{"ruleId":"165","severity":1,"message":"228","line":108,"column":15,"nodeType":"167","messageId":"168","endLine":108,"endColumn":19},{"ruleId":"165","severity":1,"message":"229","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":18},{"ruleId":"165","severity":1,"message":"230","line":3,"column":20,"nodeType":"167","messageId":"168","endLine":3,"endColumn":23},{"ruleId":"165","severity":1,"message":"231","line":3,"column":25,"nodeType":"167","messageId":"168","endLine":3,"endColumn":28},{"ruleId":"165","severity":1,"message":"226","line":12,"column":26,"nodeType":"167","messageId":"168","endLine":12,"endColumn":31},{"ruleId":"165","severity":1,"message":"232","line":17,"column":21,"nodeType":"167","messageId":"168","endLine":17,"endColumn":27},{"ruleId":"165","severity":1,"message":"176","line":17,"column":29,"nodeType":"167","messageId":"168","endLine":17,"endColumn":34},{"ruleId":"165","severity":1,"message":"233","line":17,"column":36,"nodeType":"167","messageId":"168","endLine":17,"endColumn":41},{"ruleId":"165","severity":1,"message":"195","line":56,"column":13,"nodeType":"167","messageId":"168","endLine":56,"endColumn":24},{"ruleId":"165","severity":1,"message":"234","line":61,"column":12,"nodeType":"167","messageId":"168","endLine":61,"endColumn":24},{"ruleId":"165","severity":1,"message":"235","line":62,"column":11,"nodeType":"167","messageId":"168","endLine":62,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["236"],"no-negated-in-lhs",["237"],"'makeStyles' is defined but never used.","'MaterialTable' is defined but never used.","'Link' is defined but never used.","'Badge' is defined but never used.","'tableIcons' is assigned a value but never used.","'DRUG_ORDER_STATUS' is assigned a value but never used.","'prescriptions' is assigned a value but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"238","text":"239"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'drugType' is assigned a value but never used.","'Form' is defined but never used.","'CardHeader' is defined but never used.","'moment' is defined but never used.","'buttonLabel' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'response' is assigned a value but never used.","'TiArrowBack' is defined but never used.","'MatButton' is defined but never used.","'CardBody' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Breadcrumbs' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'toggleModal1' is assigned a value but never used.","'toggleModal2' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'toggle2' is assigned a value but never used.","'closeBtn' is assigned a value but never used.","'closeBtn1' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Grid' is defined but never used.","'Step' is defined but never used.","'Label' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","'connect' is defined but never used.","'toast' is defined but never used.","'Spinner' is defined but never used.","'data' is assigned a value but never used.","'Dropdown' is defined but never used.","'Nav' is defined but never used.","'Tab' is defined but never used.","'Button' is defined but never used.","'Media' is defined but never used.","'optionsample' is assigned a value but never used.","'formData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[360,374],"token"]