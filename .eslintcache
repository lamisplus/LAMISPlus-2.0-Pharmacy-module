[{"/Users/mac/Desktop/Projects/pharmacy-module/src/index.js":"1","/Users/mac/Desktop/Projects/pharmacy-module/src/App.js":"2","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/reportWebVitals.js":"3","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/context/ThemeContext.js":"4","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/context/ThemeDemo.js":"5","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Home.js":"6","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/Index.js":"7","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PrescriptionList.js":"8","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PatientPrescriptions.js":"9","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Patient/PatientCard.js":"10","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/api.js":"11","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PrescriptionObj.js":"12","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/DispenseDrug.js":"13","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/ViewModalForm.js":"14","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/layouts/SplitActionButton.js":"15"},{"size":730,"mtime":1663411405697,"results":"16","hashOfConfig":"17"},{"size":995,"mtime":1664753868317,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1663411408409,"results":"19","hashOfConfig":"17"},{"size":8947,"mtime":1663411406353,"results":"20","hashOfConfig":"17"},{"size":2920,"mtime":1663411406353,"results":"21","hashOfConfig":"17"},{"size":1404,"mtime":1663411408391,"results":"22","hashOfConfig":"17"},{"size":1673,"mtime":1663411408402,"results":"23","hashOfConfig":"17"},{"size":6880,"mtime":1663420538645,"results":"24","hashOfConfig":"17"},{"size":8066,"mtime":1664755365440,"results":"25","hashOfConfig":"17"},{"size":7090,"mtime":1664531127093,"results":"26","hashOfConfig":"17"},{"size":414,"mtime":1664753504511,"results":"27","hashOfConfig":"17"},{"size":89321,"mtime":1663411408405,"results":"28","hashOfConfig":"17"},{"size":13039,"mtime":1664756247867,"results":"29","hashOfConfig":"17"},{"size":9283,"mtime":1663420538646,"results":"30","hashOfConfig":"17"},{"size":4642,"mtime":1664529104081,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1l9jcb3",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"35"},"/Users/mac/Desktop/Projects/pharmacy-module/src/index.js",["70"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\";  \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <BrowserRouter basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </BrowserRouter>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["71","72"],"/Users/mac/Desktop/Projects/pharmacy-module/src/App.js",["73"],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/reportWebVitals.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/context/ThemeContext.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/context/ThemeDemo.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Home.js",["74"],"import React, {useState, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\nimport PrescriptionList from './Prescriptions/PrescriptionList'\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = () => {\n    const [key, setKey] = useState('home');\n\n\n  return (\n    <Fragment>\n     \n      <Row>\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\n\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Pharmacy</h4></li>\n\t\t\t</ol>\n\t\t</div>\n        <Col xl={12}>\n          <Card style={divStyle}>\n            \n            <Card.Body style={{marginTop:\"-20px\"}}>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"mb-3\"\n                    >\n                   \n                    <Tab eventKey=\"home\" title=\"Prescriptions\">                   \n                      <PrescriptionList />\n                    </Tab>\n                    \n                    </Tabs>\n\n\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/Index.js",["75","76"],"import React,{useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport PatientCardDetail from './../Patient/PatientCard';\nimport PatientPrescriptions from './PatientPrescriptions';\nimport { useHistory } from \"react-router-dom\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\nfunction PatientCard(props) {\n    let history = useHistory();\n    const [key, setKey] = useState('home');\n    const { classes } = props;\n\n    const patientObj = history.location && history.location.state ? history.location.state : {}\n    console.log(patientObj)\n  return (\n    <div className={classes.root}>\n        \n        <Card >\n        <CardContent>\n        <PatientCardDetail patientObj={patientObj}/>\n        <br/>\n           \n        <PatientPrescriptions  patientObj={patientObj}/> \n\n         </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(PatientCard);\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PrescriptionList.js",["77","78","79","80","81","82","83","84","85","86"],"import React, {useEffect, useState} from 'react';\nimport MaterialTable from 'material-table';\n\nimport { Link } from 'react-router-dom'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n import axios from \"axios\";\nimport { url as baseUrl, token as token  } from \"../../../api\";\nimport {PrescriptionObj} from './PrescriptionObj';\nimport SplitActionButton from '../../layouts/SplitActionButton';\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\n\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst PatientSearch = (props) => {\n  const prescriptions = PrescriptionObj;\n  const [prescriptionList, setPrescriptionList] = useState([])\n    useEffect(() => {\n        Prescribtions();\n    }, []);\n    \n    ///GET LIST OF Drug Prescriptions\n    async function Prescribtions() {\n        axios\n            .get(`${baseUrl}drug-orders/patients`,{ headers: {\"Authorization\" : `Bearer ${token}`} })\n            .then((response) => {\n                console.log(\"pres\", response)\n                setPrescriptionList(response.data);\n            })\n            .catch((error) => {\n            });\n    }\n    //Get total drug dispensed \n    const totalDrugsPrescribed = (drugsArray) => {\n      const dispensed = []\n        drugsArray.map(drugs => {\n            if (drugs.status === 1)\n              dispensed.push(drugs)\n        })\n    return dispensed.length\n  }\n    const drugType = (drugsArray) => {\n    //console.log(prescriptions)\n    const type = []\n    drugsArray.map(drugs => {\n        if (drugs.data.type === 1){\n          type.push('Drug')\n        }else if(drugs.data.type === 0){\n          type.push('Regimen')\n        }else{\n          type.push('')\n        }\n       \n    })\n    \n    return type\n  }\n\n    const actionItems = prescription => {\n              return  [\n                  {\n                      name:'View',\n                      type:'link',\n                      icon:<FaEye  size=\"22\"/>,\n                      to:{\n                          pathname: \"/prescriptions\",\n                          state: prescription\n                      }\n                  },\n\n    //              {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\n    //                      {\n    //                          name:'Print Manifest',\n    //                          type:'link',\n    //                          icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\n    //                          to:{\n    //                              pathname: \"/print-manifest\",\n    //                              state: { sampleObj: row, permissions:permissions  }\n    //                          }\n    //                      }\n    //              )},\n               ]\n           }\n \n  return (\n    <div>\n      <MaterialTable\n       icons={tableIcons}\n        title=\"Drug Prescriptions\"\n        columns={[\n          { title: \"Patient ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n          },\n          { title: \"Prescription Date\", field: \"date\", type: \"date\", filtering: false, },\n          {\n            title: \"Total Prescribed\",\n            field: \"prescribedCount\",\n            filtering: false,\n          },\n          {\n            title: \"Total Dispensed\",\n            field: \"dispensedCount\",\n            filtering: false,\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        data={ prescriptionList.map((prescription) => ({\n          Id: prescription.patientHospitalNumber,\n          name: prescription.patientFirstName + \" \" + prescription.patientLastName,\n          date: prescription.drugOrders[0].dateTimePrescribed.replace(\"@\",\" \"),\n          prescribedCount: prescription.drugOrders.length,\n          dispensedCount: totalDrugsPrescribed(prescription.drugOrders),\n         // type:   drugType(prescription.formDataObj),\n          actions: (\n                <div>\n                   <SplitActionButton actions={actionItems(prescription)} />\n                </div>\n          ),\n        }))}\n                  options={{\n                    headerStyle: {\n                        backgroundColor: \"#014d88\",\n                        color: \"#fff\"\n                    },\n                    searchFieldStyle: {\n                        width : '300%',\n                        margingLeft: '250px',\n                    },\n                    filtering: false,\n                    exportButton: false,\n                    searchFieldAlignment: 'left',\n                    pageSizeOptions:[10,20,100],\n                    pageSize:10,\n                    debounceInterval: 400\n                }}\n      />\n    </div>\n  );\n}\n\nexport default PatientSearch;\n\n\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PatientPrescriptions.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107"],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Patient/PatientCard.js",["108","109","110","111","112","113","114","115","116","117","118","119"],"import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Link} from \"react-router-dom\";\n\nimport MatButton from \"@material-ui/core/Button\";\nimport { TiArrowBack } from 'react-icons/ti'\nimport classNames from 'classnames';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport { Button } from 'semantic-ui-react';\nimport { Grid, Step, Label, Segment, Icon } from \"semantic-ui-react\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Col, Row } from \"reactstrap\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\n//Dtate Picker package\nMoment.locale(\"en\");\n//momentLocalizer();\n\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n    },\n    details: {\n        alignItems: 'center',\n    },\n    column: {\n        flexBasis: '20.33%',\n    },\n    helper: {\n        borderLeft: `2px solid ${theme.palette.divider}`,\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n});\n\nfunction PatientCard(props) {\n  const { classes } = props;\n  const patientObj = props.patientObj ? props.patientObj : {}\n    const calculate_age = dob => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                age_now--;\n            }\n        if (age_now === 0) {\n                return m + \" month(s)\";\n            }\n            return age_now + \" year(s)\";\n    };\n\n  //console.log(patientObj)\n\n  return (\n    <div className={classes.root}>\n           <ExpansionPanel defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n\n                    <Row>\n\n                        <Col md={12}>\n                        <Row className={\"mt-1\"}>\n                        <Col md={12} className={classes.root2}>\n                            <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\n                            {patientObj.patientFirstName + \" \" + patientObj.patientLastName }\n                             < span style={{color:'green'}}>\n                                 {\": \"+\"Active\"}\n                            </span>\n                            </b>\n                        </Col>\n                        <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\n                        <span  style={{color:'#000'}}>\n                            {\" \"}\n                            Hospital Number : <b style={{color:'#0B72AA'}}>{patientObj.patientHospitalNumber }</b>\n                        </span>\n                        </Col>\n\n                        <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\n                        <span style={{color:'#000'}}>\n                            Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.patientDob }</b>\n                        </span>\n                        </Col>\n                        <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\n                        <span style={{color:'#000'}}>\n                            {\" \"}\n                            Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.patientDob).format(\"DD-MM-YYYY\"))}</b>\n                        </span>\n                        </Col>\n                        <Col md={4} style={{marginTop:\"10px\"}}>\n                        <span style={{color:'#000'}}>\n                            {\" \"}\n                            Sex :{\" \"}\n                            <b style={{color:'#0B72AA',fontFamily:`'poppins', sans-serif`,fontWeight:'bolder'}}>{patientObj.patientSex }</b>\n                        </span>\n                        </Col>\n                        <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\n                        <span style={{color:'#000'}}>\n                            {\" \"}\n                            E-mail : <b style={{color:'#0B72AA'}}>{patientObj.patientPhoneNumber }</b>\n                        </span>\n                        </Col>\n                        <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\n                        <span style={{color:'#000'}}>\n                            {\" \"}\n                            Address: <b style={{color:'#0B72AA'}}> </b>\n                        </span>\n                        </Col>\n\n                        {/*<Col md={12}>\n                        {VaccinationStatus(patientObj)}\n                        {CurrentStatus(patientObj.current_status)}\n\n                        </Col>*/}\n                        </Row>\n                        </Col>\n\n                    </Row>\n                    </ExpansionPanelSummary>\n\n                    <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\n                      <div className=\"float-end\" style={{floated:'right'}}>\n                        <Link to={\"/\"} >\n                            <Button\n                                floated='right'\n                                style={{padding:'0px'}}\n                            >\n                                <MatButton\n                                    variant=\"contained\"\n                                    floated='right'\n                                    startIcon={<TiArrowBack  />}\n                                    style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\n                                >\n                                    <span style={{ textTransform: \"capitalize\" }}>Back</span>\n                                </MatButton>\n                            </Button>\n\n                        </Link>\n                        </div>\n                    </ExpansionPanelActions>\n                </ExpansionPanel>\n\n        </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/api.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/PrescriptionObj.js",[],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/DispenseDrug.js",["120","121","122","123","124"],"/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/components/Prescriptions/ViewModalForm.js",["125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, {useState, useEffect} from 'react';\nimport {  Modal, ModalHeader, ModalBody,\n    Col,Input,\n    FormGroup,\n    Label,Card, CardBody\n} from 'reactstrap';\n\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/styles.css\";\nimport axios from \"axios\";\nimport { Row } from \"react-bootstrap\";\nimport { Segment,  } from 'semantic-ui-react'\nimport { url  as baseUrl, token} from \"../../../api\";\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport { useHistory } from 'react-router-dom';\n\nMoment.locale('en');\n//momentLocalizer();\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    }\n}))\n\nconst ViewDispenseModal = (props) => {\n   const history = useHistory();\n   const drugDetails= props && props.datasample ? props.datasample : {}\n   //console.log(drugDetails)\n   //console.log(props)\n\n    const { buttonLabel, className } = props;\n    const toggle = props.togglestatus\n    const modal = props.modalstatus\n    const closeBtn = props.close\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [drugDispenseObj] = useState({drugDispenses:[]})\n    const [formValues, setFormValues] = useState(drugDetails);\n\n    const handleInputChange = (e) => {\n        setFormValues ({ ...formValues, [e.target.name]: e.target.value });\n    }\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <ToastContainer autoClose={3000} hideProgressBar />\n                    <Modal\n                        isOpen={modal}\n                        toggle={toggle}\n                        className={className}\n                        size=\"lg\"\n                    >\n                        <ModalHeader toggle={toggle} close={closeBtn}>\n                            Dispensing\n                        </ModalHeader>\n                        <ModalBody>\n                            <Col lg={12}>\n                                <Row>\n                                    <Col xl={12} >\n                                    <Segment color='teal'>\n                                        <Row>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Drug Name :</strong> <p>{drugDetails.drugName}</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Date Prescribed : </strong> <p>{drugDetails.dateTimePrescribed.replace(\"@\", \" \")}</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Dose Frequency :</strong><p>{drugDetails.dosageFrequency} daily</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-2\">\n                                                <strong>Start Date :</strong><p>{drugDetails.startDate}</p>\n                                            </Col>\n                                            <Col className=\"col-md-6 mb-1\">\n                                                <strong>Instruction : </strong><p>{drugDetails.comment}</p>\n                                            </Col>\n                                        </Row>\n                                    </Segment>\n                                    </Col>\n\n                                </Row>\n\n                            </Col>\n                            <br/>\n                            <form>\n                            <div className=\"row\">\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                            <Label for=\"dateTimeDispensed\">Date Dispensed</Label>\n\n                                            <Input\n                                                type=\"text\"\n                                                name=\"dateTimeDispensed\"\n                                                value={formValues.dateTimeDispensed === null ? \"\" :formValues.dateTimeDispensed.replace(\"@\", \" \")}\n                                                id=\"dateTimeDispensed\"\n                                                placeholder=\"Date Dispensed\"\n                                                onChange={handleInputChange}\n                                                disabled={true}\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                    </div>\n                                    <div className=\"row\">\n                                    <div className=\"form-group mb-3 col-md-5\">\n                                        <FormGroup>\n                                            <Label for=\"exampleNumber\">Brand name</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"brand\"\n                                                value={formValues.brand}\n                                                id=\"brand\"\n                                                placeholder=\"brand name\"\n                                                onChange={handleInputChange}\n                                                disabled={true}\n                                            />\n\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-3\">\n                                        <FormGroup>\n                                            <Label>Quantity</Label>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"quantity\"\n                                                value={formValues.dosageStrength}\n                                                id=\"quantity\"\n                                                onChange={handleInputChange}\n                                                disabled={true}\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-4\">\n                                        <FormGroup>\n                                            <Label >Unit</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"unit\"\n                                                id=\"unit\"\n                                                value={formValues.dosageStrengthUnit}\n                                                onChange={handleInputChange}\n                                                disabled={true}>\n                                            </Input>\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-12\">\n                                        <FormGroup>\n                                            <Label for=\"comment\">Note</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"comment\"\n                                                id=\"comment\"\n                                                row=\"40\"\n                                                value={formValues.comments}\n                                                style={{ minHeight: 100, fontSize: 14 }}\n                                                onChange={handleInputChange}\n                                                disabled={true}\n                                            ></Input>\n                                        </FormGroup>\n                                    </div>\n                                </div>\n\n                            </form>\n                        </ModalBody>\n                    </Modal>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\n\nexport default ViewDispenseModal;\n","/Users/mac/Desktop/Projects/pharmacy-module/src/main/webapp/jsx/layouts/SplitActionButton.js",["140","141","142","143","144","145","146","147","148","149","150","151"],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n//import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\n//import VisibilityIcon from '@mui/icons-material/Visibility';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\n//import ContentCut from '@mui/icons-material/ContentCut';\nimport Typography from '@mui/material/Typography';\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\nimport Divider from '@mui/material/Divider';\nimport {useRef} from \"react\";\nimport { Link } from 'react-router-dom'\n\n\n\nconst options = ['Delete', 'Edit'];\n\n\n\nexport default function SplitActionButton(props) {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = useRef(null);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n    const handleClick = () => {\n        console.info(`You clicked ${options[selectedIndex]}`);\n    };\n\n    const handleMenuItemClick = () => {\n        setOpen(false);\n    };\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            <ButtonGroup variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'150px'}} >\n                <Link to={props.actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\n                    <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\n                        <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].name}</Typography>\n                    </Button>\n                </Link>\n\n                <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\n                    1\n                </Divider>\n                <Button\n                    size=\"medium\"\n                    aria-controls={open ? 'split-button-menu' : undefined}\n                    aria-expanded={open ? 'true' : undefined}\n                    aria-label=\"select merge strategy\"\n                    aria-haspopup=\"menu\"\n                    onClick={handleToggle}\n                    style={{backgroundColor:'rgb(153, 46, 98)'}}\n                >\n                    <FaCaretDown size='24' />\n                </Button>\n            </ButtonGroup>\n          {/*<Popper\n                open={open}\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                style={{ zIndex:'10000' }}\n            >\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                            zIndex:'1000'\n                        }}\n                    >\n\n                        <Paper sx={{ minWidth:'130px', maxWidth: '150px', marginTop:'2px', zIndex:'1000' }}>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <MenuList id=\"split-button-menu\" autoFocusItem>\n                                    {props.actions.slice(1).map((option, index) => (\n                                        <MenuItem\n                                            key={Math.random()}\n                                        >\n                                            <Link\n                                                to={option.to}\n                                            >\n                                                {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\n                                            </Link>\n\n                                        </MenuItem>\n                                    ))}\n                                </MenuList>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>*/}\n        </React.Fragment>\n    );\n}",{"ruleId":"152","severity":1,"message":"153","line":4,"column":41,"nodeType":"154","messageId":"155","endLine":4,"endColumn":47},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"152","severity":1,"message":"153","line":3,"column":19,"nodeType":"154","messageId":"155","endLine":3,"endColumn":25},{"ruleId":"152","severity":1,"message":"160","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":20},{"ruleId":"152","severity":1,"message":"161","line":48,"column":12,"nodeType":"154","messageId":"155","endLine":48,"endColumn":15},{"ruleId":"152","severity":1,"message":"162","line":48,"column":17,"nodeType":"154","messageId":"155","endLine":48,"endColumn":23},{"ruleId":"152","severity":1,"message":"163","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":14},{"ruleId":"152","severity":1,"message":"164","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":22},{"ruleId":"152","severity":1,"message":"165","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":15},{"ruleId":"152","severity":1,"message":"166","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":9,"column":26,"nodeType":"169","messageId":"170","endLine":9,"endColumn":40,"fix":"171"},{"ruleId":"152","severity":1,"message":"172","line":12,"column":16,"nodeType":"154","messageId":"155","endLine":12,"endColumn":26},{"ruleId":"152","severity":1,"message":"173","line":53,"column":9,"nodeType":"154","messageId":"155","endLine":53,"endColumn":22},{"ruleId":"174","severity":1,"message":"175","line":73,"column":30,"nodeType":"176","messageId":"177","endLine":73,"endColumn":32},{"ruleId":"152","severity":1,"message":"178","line":79,"column":11,"nodeType":"154","messageId":"155","endLine":79,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":82,"column":26,"nodeType":"176","messageId":"177","endLine":82,"endColumn":28},{"ruleId":"152","severity":1,"message":"179","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},{"ruleId":"152","severity":1,"message":"180","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":17},{"ruleId":"152","severity":1,"message":"181","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":23},{"ruleId":"152","severity":1,"message":"163","line":8,"column":10,"nodeType":"154","messageId":"155","endLine":8,"endColumn":14},{"ruleId":"152","severity":1,"message":"182","line":18,"column":3,"nodeType":"154","messageId":"155","endLine":18,"endColumn":11},{"ruleId":"152","severity":1,"message":"183","line":19,"column":3,"nodeType":"154","messageId":"155","endLine":19,"endColumn":13},{"ruleId":"152","severity":1,"message":"184","line":20,"column":3,"nodeType":"154","messageId":"155","endLine":20,"endColumn":6},{"ruleId":"152","severity":1,"message":"185","line":21,"column":3,"nodeType":"154","messageId":"155","endLine":21,"endColumn":6},{"ruleId":"152","severity":1,"message":"186","line":24,"column":8,"nodeType":"154","messageId":"155","endLine":24,"endColumn":17},{"ruleId":"152","severity":1,"message":"187","line":25,"column":8,"nodeType":"154","messageId":"155","endLine":25,"endColumn":19},{"ruleId":"152","severity":1,"message":"188","line":26,"column":8,"nodeType":"154","messageId":"155","endLine":26,"endColumn":18},{"ruleId":"152","severity":1,"message":"189","line":70,"column":8,"nodeType":"154","messageId":"155","endLine":70,"endColumn":25},{"ruleId":"152","severity":1,"message":"190","line":72,"column":9,"nodeType":"154","messageId":"155","endLine":72,"endColumn":16},{"ruleId":"152","severity":1,"message":"191","line":79,"column":9,"nodeType":"154","messageId":"155","endLine":79,"endColumn":21},{"ruleId":"152","severity":1,"message":"192","line":80,"column":20,"nodeType":"154","messageId":"155","endLine":80,"endColumn":31},{"ruleId":"152","severity":1,"message":"193","line":106,"column":9,"nodeType":"154","messageId":"155","endLine":106,"endColumn":16},{"ruleId":"152","severity":1,"message":"194","line":111,"column":9,"nodeType":"154","messageId":"155","endLine":111,"endColumn":17},{"ruleId":"152","severity":1,"message":"195","line":117,"column":10,"nodeType":"154","messageId":"155","endLine":117,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":139,"column":16,"nodeType":"198","messageId":"199","endLine":139,"endColumn":18},{"ruleId":"196","severity":1,"message":"197","line":139,"column":37,"nodeType":"198","messageId":"199","endLine":139,"endColumn":39},{"ruleId":"200","severity":1,"message":"201","line":167,"column":31,"nodeType":"202","messageId":"203","endLine":167,"endColumn":33},{"ruleId":"152","severity":1,"message":"204","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"205","line":8,"column":8,"nodeType":"154","messageId":"155","endLine":8,"endColumn":18},{"ruleId":"152","severity":1,"message":"206","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":29},{"ruleId":"152","severity":1,"message":"188","line":13,"column":8,"nodeType":"154","messageId":"155","endLine":13,"endColumn":18},{"ruleId":"152","severity":1,"message":"207","line":16,"column":8,"nodeType":"154","messageId":"155","endLine":16,"endColumn":15},{"ruleId":"152","severity":1,"message":"208","line":18,"column":10,"nodeType":"154","messageId":"155","endLine":18,"endColumn":14},{"ruleId":"152","severity":1,"message":"209","line":18,"column":16,"nodeType":"154","messageId":"155","endLine":18,"endColumn":20},{"ruleId":"152","severity":1,"message":"210","line":18,"column":22,"nodeType":"154","messageId":"155","endLine":18,"endColumn":27},{"ruleId":"152","severity":1,"message":"211","line":18,"column":29,"nodeType":"154","messageId":"155","endLine":18,"endColumn":36},{"ruleId":"152","severity":1,"message":"212","line":18,"column":38,"nodeType":"154","messageId":"155","endLine":18,"endColumn":42},{"ruleId":"152","severity":1,"message":"181","line":22,"column":8,"nodeType":"154","messageId":"155","endLine":22,"endColumn":23},{"ruleId":"213","severity":1,"message":"214","line":98,"column":39,"nodeType":"202","messageId":"215","endLine":98,"endColumn":40},{"ruleId":"152","severity":1,"message":"216","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"181","line":20,"column":8,"nodeType":"154","messageId":"155","endLine":20,"endColumn":23},{"ruleId":"152","severity":1,"message":"217","line":89,"column":13,"nodeType":"154","messageId":"155","endLine":89,"endColumn":24},{"ruleId":"152","severity":1,"message":"218","line":94,"column":12,"nodeType":"154","messageId":"155","endLine":94,"endColumn":18},{"ruleId":"152","severity":1,"message":"219","line":131,"column":25,"nodeType":"154","messageId":"155","endLine":131,"endColumn":32},{"ruleId":"152","severity":1,"message":"216","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"180","line":8,"column":8,"nodeType":"154","messageId":"155","endLine":8,"endColumn":17},{"ruleId":"152","severity":1,"message":"220","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":16},{"ruleId":"152","severity":1,"message":"221","line":11,"column":8,"nodeType":"154","messageId":"155","endLine":11,"endColumn":18},{"ruleId":"152","severity":1,"message":"222","line":12,"column":26,"nodeType":"154","messageId":"155","endLine":12,"endColumn":31},{"ruleId":"152","severity":1,"message":"223","line":15,"column":8,"nodeType":"154","messageId":"155","endLine":15,"endColumn":13},{"ruleId":"152","severity":1,"message":"224","line":18,"column":18,"nodeType":"154","messageId":"155","endLine":18,"endColumn":25},{"ruleId":"152","severity":1,"message":"225","line":18,"column":27,"nodeType":"154","messageId":"155","endLine":18,"endColumn":32},{"ruleId":"152","severity":1,"message":"181","line":20,"column":8,"nodeType":"154","messageId":"155","endLine":20,"endColumn":23},{"ruleId":"152","severity":1,"message":"226","line":62,"column":10,"nodeType":"154","messageId":"155","endLine":62,"endColumn":17},{"ruleId":"152","severity":1,"message":"217","line":67,"column":13,"nodeType":"154","messageId":"155","endLine":67,"endColumn":24},{"ruleId":"152","severity":1,"message":"190","line":71,"column":11,"nodeType":"154","messageId":"155","endLine":71,"endColumn":18},{"ruleId":"152","severity":1,"message":"218","line":72,"column":12,"nodeType":"154","messageId":"155","endLine":72,"endColumn":18},{"ruleId":"152","severity":1,"message":"227","line":72,"column":20,"nodeType":"154","messageId":"155","endLine":72,"endColumn":29},{"ruleId":"152","severity":1,"message":"228","line":73,"column":12,"nodeType":"154","messageId":"155","endLine":73,"endColumn":27},{"ruleId":"152","severity":1,"message":"229","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":25},{"ruleId":"152","severity":1,"message":"230","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":12},{"ruleId":"152","severity":1,"message":"231","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":13},{"ruleId":"152","severity":1,"message":"232","line":8,"column":8,"nodeType":"154","messageId":"155","endLine":8,"endColumn":14},{"ruleId":"152","severity":1,"message":"233","line":9,"column":8,"nodeType":"154","messageId":"155","endLine":9,"endColumn":16},{"ruleId":"152","severity":1,"message":"234","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":16},{"ruleId":"152","severity":1,"message":"235","line":12,"column":8,"nodeType":"154","messageId":"155","endLine":12,"endColumn":20},{"ruleId":"152","severity":1,"message":"236","line":13,"column":8,"nodeType":"154","messageId":"155","endLine":13,"endColumn":20},{"ruleId":"152","severity":1,"message":"237","line":16,"column":9,"nodeType":"154","messageId":"155","endLine":16,"endColumn":14},{"ruleId":"152","severity":1,"message":"238","line":30,"column":27,"nodeType":"154","messageId":"155","endLine":30,"endColumn":43},{"ruleId":"152","severity":1,"message":"239","line":36,"column":11,"nodeType":"154","messageId":"155","endLine":36,"endColumn":30},{"ruleId":"152","severity":1,"message":"240","line":44,"column":11,"nodeType":"154","messageId":"155","endLine":44,"endColumn":22},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["241"],"no-negated-in-lhs",["242"],"'makeStyles' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'Link' is defined but never used.","'VisibilityIcon' is defined but never used.","'Tooltip' is defined but never used.","'IconButton' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"243","text":"244"},"'FaUserPlus' is defined but never used.","'prescriptions' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'drugType' is assigned a value but never used.","'TiArrowBack' is defined but never used.","'MatButton' is defined but never used.","'momentLocalizer' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'ButtonMui' is defined but never used.","'Breadcrumbs' is defined but never used.","'Typography' is defined but never used.","'prescriptionOrder' is assigned a value but never used.","'classes' is assigned a value but never used.","'toggleModal2' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'toggle2' is assigned a value but never used.","'closeBtn' is assigned a value but never used.","'closeBtn1' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'classNames' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'Divider' is defined but never used.","'Grid' is defined but never used.","'Step' is defined but never used.","'Label' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useEffect' is defined but never used.","'buttonLabel' is assigned a value but never used.","'saving' is assigned a value but never used.","'newData' is assigned a value but never used.","'SaveIcon' is defined but never used.","'CancelIcon' is defined but never used.","'toast' is defined but never used.","'axios' is defined but never used.","'baseUrl' is defined but never used.","'token' is defined but never used.","'history' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'drugDispenseObj' is assigned a value but never used.","'ClickAwayListener' is defined but never used.","'Grow' is defined but never used.","'Paper' is defined but never used.","'Popper' is defined but never used.","'MenuItem' is defined but never used.","'MenuList' is defined but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'FaEye' is defined but never used.","'setSelectedIndex' is assigned a value but never used.","'handleMenuItemClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[352,366],"token"]